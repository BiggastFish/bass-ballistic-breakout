<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/// I LIKE CHEX MIX

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 3;

facePlayer = false;
blockCollision = 0;
grav = 0;
respawn = false;

// can change these in creation code
turnIncrement = 22.5; //amount of degrees turned 
turnFrames = 18 //time required to turn
originalSpeed = 1; //original speed 
itemDrop = -1;
// Enemy specific code
timer = 0;
newAngle = 0;
startAngle = -1;
angle = 0;
spd = 1;
canAim = false;

image_index = 1;
didSpeedUp = false;
canPush = false;
canSlash = false;

palette = sprClineFPalette;
palette_index = 0;
col = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if instance_exists(objSectionSwitcher)
{
    visible = false;
}
if (entityCanStep())
{
    if instance_exists(parent) &amp;&amp; !parent.dead
    {  
        var prevSegment = parent.segment[num - 1]
        if instance_exists(prevSegment)
        {
            newAngle = point_direction(x, y, prevSegment.x, prevSegment.y);
        }
        else
        {
            instance_destroy();
        }
    }
    else
    {
        instance_destroy();
        exit;
    }
    
    if image_index != 2
    {
        if parent.curSegment == num
        {
            image_index = 2;
        }
    }
    timer += 1;
    if (timer &gt;= floor(turnFrames *(originalSpeed/spd)))
    {
        timer = 0;
        if (angle != newAngle)
        {
            angle = wrapAngle(newAngle);
            image_angle = newAngle + 180*(image_xscale &lt; 0);
        }
    }
    if timer &gt;= 0
    {
        xspeed = cos(degtorad(angle)) * spd;
        yspeed = -sin(degtorad(angle)) * spd;  
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if instance_exists(parent)
{
    var _i;
    _i = instance_create(x, y, objSlashEffect);
    _i.sprite_index = sprite_index;
    _i.image_index = image_index;
    _i.image_xscale = image_xscale;
    _i.image_yscale = image_yscale;
    _i.image_angle = image_angle;
    _i.xspeed = parent.randxspd;
    _i.yspeed = parent.randyspd;
    
    if didSpeedUp == false
    {
        with (parent)
        {
            canAim = true;
            spd = min(maxSpeed,spd + speedIncrement);
            other.didSpeedUp = true;
        }
    }


    with (object_index)
    {
        if parent == other.parent
        {
            spd = parent.spd;
            if num &gt; other.num
            {
                event_user(10);
            }
        }
    }
    parent.curSegment = num - 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>palette_index = col;
palette_set(palette, palette_index);  
event_inherited();

if !dead
{
    if image_index == 2
    {
        draw_sprite_ext(sprClineFTail,0,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    }
}

shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
