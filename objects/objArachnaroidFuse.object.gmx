<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprArachnaroidFuse</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 4;
blockCollision = false;
grav = 0;

length = 9;
canExpand = true;
expandTime = 0;
expandTimeMax = 3;
dir = 'v';
firstPart = false;

spriteHor = sprArachnaroidFuseSide;
spriteVer = sprArachnaroidFuse;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    expandTime++;
    if (expandTime &gt;= expandTimeMax)
    {
        if (instance_exists(target) &amp;&amp; firstPart &amp;&amp; canExpand)
        {
            var tx = target.x, ty = target.y, 
            xDir = choose(-1, 1), yDir = choose(-1, 1);
            
            xDir = -1 + (2 * (tx &gt; x));
            yDir = -1 + (2 * (ty &gt; y));

            if (dir == 'v' &amp;&amp; ((ty &lt;= y + (16 * image_yscale) 
            &amp;&amp; sign(image_yscale) &gt; 0) || (ty &gt;= y - (16 * image_yscale)
            &amp;&amp; sign(image_yscale) &lt; 0)))
            {
                l = instance_create(x + (8 * -xDir), 
                y + (16 * (image_yscale - sign(image_yscale)))
                + (8 * sign(image_yscale)), object_index);
                l.dir = 'h';
                l.image_xscale = xDir;
                l.sprite_index = spriteHor;
                l.spriteHor = spriteHor;
                canExpand = false;
            }
            if (dir == 'h' &amp;&amp; ((tx &lt;= x + (16 * image_xscale) 
            &amp;&amp; sign(image_xscale) &gt; 0) || (tx &gt;= x - (16 * image_yscale)
            &amp;&amp; sign(image_xscale) &lt; 0)))
            {
                l = instance_create(x + (16 * (image_xscale - sign(image_xscale))) 
                + (8 * sign(image_xscale)), y + (8 * -yDir), object_index);
                l.dir = 'v';
                l.image_xscale = yDir;
                l.sprite_index = spriteVer;
                l.spriteVer = spriteVer;
                canExpand = false;
            }
        }
        if (length &gt; 0)
        {
            length--;
            if (canExpand)
            {
                if (dir == 'v')
                    image_yscale+= sign(image_yscale);
                if (dir == 'h')
                    image_xscale+= sign(image_xscale);
            }
        }
        else
        {
            if (dir == 'v') y+= 16 * sign(image_yscale);
            if (dir == 'h') x+= 16 * sign(image_xscale);
            if (firstPart)
            {
                if (dir == 'v') image_yscale--;
                if (dir == 'h') image_xscale--;
                if (image_yscale == 0 || image_xscale == 0)
                    instance_destroy();
            }
        }
        expandTime = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var img = 0;
if (dir == 'v')
{
    for (i = 0; i &lt; abs(image_yscale); i++)
    {
        if (i == 0 || i == (abs(image_yscale) - 1))
            img = 1;
        else
            img = 0;
        draw_sprite_ext(spriteVer, img, x, y + ((16 * i) * sign(image_yscale)), 
        image_xscale, sign(image_yscale), 0, c_white, image_alpha);
    }
}
if (dir == 'h')
{
    for (i = 0; i &lt; abs(image_xscale); i++)
    {
        if (i == 0 || i == (abs(image_xscale) - 1))
            img = 1;
        else
            img = 0;
        draw_sprite_ext(spriteHor, img, x + ((16 * i) * sign(image_xscale)), y,
        sign(image_xscale), image_yscale, 0, c_white, image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
