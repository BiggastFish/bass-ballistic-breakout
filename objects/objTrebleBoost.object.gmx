<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTrebleTeleport</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 0;
bubbleTimer = 0;

dir = 1;

with (parent)
{
    other.dir = image_xscale;
}

canNeverLand = 0;

mySpeed = 8;

canHit = false;

teleportTimer = 0;
upordown = 'down';

alarm[0] = 1;

trebleLock = false;
shootLock = false;

phase = 0;
ammoTimer = 0;
timer = 4 * 60;

imgx = 0;
yOff = 0;
yAngle = 0;
wickedFunny = 0;

//Play correct sounds
warpInSFX = sfxTeleportIn;
warpOutSFX = sfxTeleportOut;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(parent))
{
    with (parent)
    {
        if (other.trebleLock)
            lockPoolRelease(other.trebleLock);
        if (other.shootLock)
            lockPoolRelease(other.shootLock);
        playLandSound = 1;
        trebleBoosted = 0;
        yOff = 0;
        if (iFrames == -1)
            hitTimer = 32;
    }
}
with (objRushTeleportBlock)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (upordown == 'up')
{
    yspeed = 0;
}
else
{
    yspeed = mySpeed * image_yscale;
    
    with (parent)
    {
        var i = instance_create(x - 8 - 16, y, objRushTeleportBlock);
        i.image_xscale = 3;
        i.image_yscale = image_yscale;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (!instance_exists(parent) &amp;&amp; phase &lt; 5)
    {
        phase = 5;
        teleportTimer = 0;
        image_index = 0;
        sprite_index = sprTrebleTeleport;
    }

    if ((yspeed &gt; 0 &amp;&amp; y &gt; view_yview + view_hview)
    || (yspeed &lt; 0 &amp;&amp; y &lt; view_yview))
    {
        despawnRange = 0;
    }

    if (!phase) // teleporting in
    {
        with (objRushTeleportBlock)
            x = other.x;
        if (yspeed != 0 &amp;&amp; upordown == 'down')
        {       
            if (!canNeverLand)
            {
                if (place_meeting(x, y, objRushTeleportBlock))
                {
                    if (!checkSolid(0, 0))
                    {
                        blockCollision = 1;
                    }
                    else
                    {
                        canNeverLand = 1;
                    }
                }
            }
        }
        else
        {
            blockCollision = 0;
            if (teleportTimer == 1)
            {
                image_index = 0;
                playSFX(warpInSFX);
            }
            if (teleportTimer == 3)
            {
                image_index = 1;
            }
            else if (teleportTimer == 6)
            {
                image_index = 0;
            }
            else if (teleportTimer == 9)
            {
                image_index = 2;
            }
            else if (teleportTimer == 13)
            {
                phase = 1;
                image_index = 0;
                sprite_index = sprTreble;
            }
            teleportTimer++;
        }
    }
    else if (phase == 1) // idle, GROWLING &gt;:(
    {
        if (timer)
        {
            timer--;
            if (timer mod 60 &gt; 36)
            {
                image_index = ((timer mod 6) &gt; 2) + 1;
            }
            else
            {
                image_index = 0;
            }
            if (!timer)
            {
                // Teleport away
                phase = 5;
                teleportTimer = 0;
                sprite_index = sprTrebleTeleport;
            }
        }
        
    }
    else if (phase == 2) // transformation
    {
        imgx+= .25;
        if (imgx &gt;= 3)
        {
            imgx = 3;
            phase = 3;
            with (parent)
            {
                lockPoolRelease(other.shootLock);
            }
            shootLock = false;
        }
        
    }
    else if (phase == 3) // actual Treble Boost part
    {
        imgx+= 1/3;
        if (imgx &gt;= 5)
            imgx = 3;
        timer+= 4;
        yOff = sin(degtorad(timer)) * 2;
        ammoTimer++;
        if (ammoTimer mod 40 == 0)
        {
            if (global.ammo[playerID, global.weapon[playerID]] &gt; 0)
            {
                global.ammo[playerID, global.weapon[playerID]] = max(0,
                global.ammo[playerID, global.weapon[playerID]] - 1);
            }
            else
            {
                with (parent)
                {
                    yOff = 0;
                }
                instance_destroy();
                exit;
            }
        }
        with (parent)
        {
            other.x = x;
            other.y = y;
            playLandSound = -2;
            yOff = other.yOff;
            if (xDir != 0 &amp;&amp; (global.keyRight[playerID] &amp;&amp; xspeed &lt; 2) ||
                (global.keyLeft[playerID] &amp;&amp; xspeed &gt; -2))
            {
                xspeed += xDir * ((1/6) * 1.5);
            }
            else if (xspeed != 0)
            {
                xspeed -= ((1/12) * 1.5) * sign(xspeed);
            }
            
            if (yDir != 0 &amp;&amp; ycoll &lt;= 0 &amp;&amp;
            (global.keyDown[playerID] &amp;&amp; yspeed &lt; 2) ||
            (global.keyUp[playerID] &amp;&amp; yspeed &gt; -2))
            {
                yspeed += yDir * ((1/6) * 1.5);
            }
            else if (yspeed != 0)
            {
                yspeed -= ((1/12) * 1.5) * sign(yspeed);
            }
        }
    }
    else if (phase == 5) // teleport away
    {
        if (teleportTimer == 0)
        {
            image_index = 2;
            playSFX(warpOutSFX);
        }
        if (teleportTimer == 3)
        {
            image_index = 0;
        }
        else if (teleportTimer == 6)
        {
            image_index = 1;
        }
        else if (teleportTimer == 9)
        {
            image_index = 0;
        }
        else if (teleportTimer == 13)
        {
            yspeed = -mySpeed * image_yscale;
        }
        teleportTimer++;
    }
    if (phase &lt; 2 || phase == 5)
    {
        if (place_meeting(x, y, parent))
        {
            with (parent)
            {
                isShoot = 0;
                isSlide = 0;
                dashJumped = 0;
                climbing = 0;
                xspeed = 0;
                yspeed = 0;
                spriteY = 10;
                spriteX = 0;
                trebleBoosted = 1;
                other.shootLock = lockPoolLock(
                    localPlayerLock[PL_LOCK_SHOOT],
                    localPlayerLock[PL_LOCK_TURN]);
                other.trebleLock = lockPoolLock(
                    localPlayerLock[PL_LOCK_MOVE],
                    localPlayerLock[PL_LOCK_JUMP],
                    localPlayerLock[PL_LOCK_SLIDE],
                    localPlayerLock[PL_LOCK_CLIMB],
                    localPlayerLock[PL_LOCK_GRAVITY]);
                playerHandleSprites("TrebleBoost");
            }
            playSFX(sfxBassBloop);
            phase = 2;
            yspeed = 0;
            timer = 0;
            shiftVisible = 3;
            despawnRange = -1;
        }
    }
    if (phase == 2 || phase == 3)
    {
        despawnRange = -1;
        with (objMegaman)
        {
            playerHandleSprites("TrebleBoost");
        }
    }
}
else if (global.switchingSections)
{
    with (parent)
    {
        playerHandleSprites("TrebleBoost");
        xspeed = (2 * xDir);
        yspeed = (2 * yDir);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID])
{
    with (objMegaman)
    {
        if (teleporting || showReady)
        {
            exit;
        }
    }
    if (!instance_exists(objTrebleBoost)
    &amp;&amp; global.ammo[playerID, global.weapon[playerID]] &gt; 0)
    {
        i = fireWeapon(26, 0, objTrebleBoost, 4, 0, 0, 0);
        with (i)
        {
            y = view_yview;
            if (image_yscale &lt; 0)
            {
                y += view_hview;
            }
        }
    }
    else if (!playerIsLocked(PL_LOCK_SHOOT))
    {
        if (!trebleBoosted)
        {
            i = fireWeapon(16, 0, objNormalBusterShot, 4, 0, 1, 0);
            if (i)
            {
                i.xspeed = image_xscale * 5; // zoom
                i.sprite_index = sprBassBullet;
            }
        }
        else if (!trebleBoostCoolDown)
        {
            trebleBoostCoolDown = 20;
            var g = ground;
            for (z = -1; z &lt;= 1; z++)
            {
                i = fireWeapon(16, (g * -6) + (2 + yOff), 
                objNormalBusterShot, 360, 0, 1, 0);
                if (i)
                {
                    i.contactDamage = 2;
                    i.speed = 5;
                    i.sprite_index = sprBassBullet;
                    i.image_index = (2 * (z != 0)) + (1 * 
                    ((z == -1 &amp;&amp; image_xscale &gt; 0) || (z == 1 &amp;&amp; image_xscale &lt; 0)))
                    i.direction = 0;
            
                    if (image_xscale &lt; 0)
                    {
                        i.direction += 180;
                    }
                        
                    i.direction+= 30 * z;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("TREBLE BOOST", make_color_rgb(112, 112, 112), make_color_rgb(128, 0, 240), sprWeaponIconsTrebleBoost);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase &lt; 2 || phase == 5)
    drawSelf();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
