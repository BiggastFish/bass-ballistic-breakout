<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCirno</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 160;
healthpoints = healthpointsStart;
blockCollision = 1;
grav = 0;
contactDamage = 4;

vine = noone;
facePlayerOnSpawn = 1;
cirnoTimer = 0;
nice = 0;
imgDex = 0;
imgDir = 1;
spd = 0;
scrollSpeed = 0;
phase = 0;
introType = 0;
stuffDone = 420;
attackCount = 0;
movingPhaseLeft = 2;

phaseArray[0] = 1;
phaseArray[1] = 2;
phaseArray[2] = 0;
phaseArray[3] = 1;
phaseArray[4] = 2;
phaseArray[5] = 0;
phaseArray[6] = 1;
phaseArrayDir = 1;
phasePick = 2 + irandom(2);
lastAttack = 5;
tx = x;
ty = y;

// Music
music = "HoTDBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.665;
musicLoopSecondsEnd = 70.655;

// Damage Tables
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objYamato, 2);
enemyDamageValue(objKnuckleSandwich, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Handle Intro
if (!global.frozen)
{
    // Starting the intro animation
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
    }
    else if (isIntro)
    {
        visible = 1;
        isIntro = false;
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        var yeah = view_xview + 128;
        if (instance_exists(target))
        {
            tx = target.x;
            ty = target.y;
        }
        cirnoTimer++;
        switch (phase)
        {
            case 0: // ice ball
                if (cirnoTimer == 20)
                {
                    image_xscale*= -1;
                    image_index = 1;
                }
                if (cirnoTimer &gt;= 36 &amp;&amp; cirnoTimer mod 4 == 0 &amp;&amp; nice &lt; 3)
                {
                    if (image_index &lt; 3)
                        image_index++;
                    else
                    {
                        if (!instance_exists(target))
                        {
                            tx = yeah;
                            ty = view_yview + 120;
                        }
                        for (i = 1; i &lt;= 5; i++)
                        {
                            s = instance_create(tx + round(cos(degtorad(((360/5) * i) + 18)) * 96),
                            ty + round(sin(degtorad(((360/5) * i) + 18)) * 96), objCirnoCircleSpike)
                            s.tx = tx;
                            s.ty = ty;
                            s.ang = ((360/5) * i) + 18;
                            s.count = i;
                            s.image_speed = -0.3;
                            s.image_index = 3;
                            s.depth = -100005;
                        }
                        nice++;
                        cirnoTimer = -80;
                    }
                }
                if (nice == 3)
                {
                    if (cirnoTimer == 12)
                    {
                        cirnoTimer = 0;
                        nice = 0;
                        image_index = 0;
                        phase = 1;
                    }
                }
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (objPerfumaVine)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
with (prtEnemyProjectile)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
with (objParallax)
    xspeed = 0;
m = instance_create(x, y, objEnemyBullet);
m.image_xscale = image_xscale;
m.sprite_index = sprite_index;
m.yspeed = -3;
m.xspeed = 2 * image_xscale + ((-3 * (abs(scrollSpeed) &lt; 1.4)) * image_xscale);
m.grav = .2;
m.contactDamage = 0;
m.reflectable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*
draw_text(view_xview + 32, view_yview + 64, imgDex);
draw_text(view_xview + 32, view_yview + 80, imgDir);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
