<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGoldragon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

respawnRange = -1;
despawnRange = -1;
blockCollision = 0;
grav = 0;
contactDamage = 4;
canIce = 0;
init = 1;
bruhTimer = -1;
bruhTimer2 = -1;
num = 0;
_im = 0;
img = 0;
dang = 0;
hasFired = 0;
storedXSpd = 0;
storedYSpd = 0;
storedXSpd2 = 0;
storedYSpd2 = 0;
check = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    if (num &lt; 7)
    {
        image_index = num + 1;
    }
    else
    {
        image_index = 16;
    }
    init = 0;
}

event_inherited();

// Handle Intro
if (entityCanStep())
{
    var look = objGoldragon.seg[6]
    if (instance_exists(look) &amp;&amp; num == 7)
    {
        image_angle = point_direction(x, y, look.x, look.y);
        dang = image_angle + 180;
    }

    if (num &lt; 7)
    {
        animationLoop(2, 15, 0.6);
    }
    
    if (objGoldragon.phase == 0)
    {
        if (yspeed &gt; 0)
        {
            if (!hasFired &amp;&amp; num == 7)
            {
                for (l = -1; l &lt;= 1; l+= 2)
                {
                    if (l != 0)
                    {
                        m = instance_create(x + round(cos(degtorad(dang)) * 10),
                        y + round(sin(degtorad(dang)) * 10), objEnemyBullet);
                        m.grav = .12;
                        m.yspeed = -2;
                        m.xspeed = l * 1.25;
                        m.sprite_index = sprGrabBuster;
                        m.image_speed = .25;
                    }
                }
                for (p = -1; p &lt;= 1; p++)
                {
                    instance_create(x + round(cos(degtorad(dang)) * 10),
                    y + round(sin(degtorad(dang)) * 10), objExplosion);
                    e = instance_create(x + round(cos(degtorad(dang)) * 10),
                    y + round(sin(degtorad(dang)) * 10), objEnemyBullet);
                    e.sprite_index = sprGrabBuster;
                    e.image_speed = .25;
                    e.spd = 3 + (-1 * (p != 0));
                    if (instance_exists(target))
                    {
                        var ang = point_direction(x, y, target.x, target.y);
                        e.dir = ang + (20 * p);
                    }
                    else
                    {
                        e.dir = 270 + (20 * p);
                    }
                }
                playSFX(sfxEnemyShootClassic);
                hasFired = 1;
            }
            if (bbox_top &gt;= view_yview + 224)
            {
                xspeed = 0;
                yspeed = 0;
                grav = 0;
                if (num == 7 &amp;&amp; hasFired == 1)
                {
                    hasFired = 0;
                    with (objGoldragon)
                    {
                        if (shotsFired &lt; 2)
                        {
                            shotsFired++;
                            bruhTimer = 42;
                        }
                        else
                        {
                            phase = 1;
                            bruhTimer = 0;
                            shotsFired = 0;
                        }
                    }
                }
            }
        }
        
        if (bruhTimer &gt; -1)
        {
            bruhTimer--;
            if (bruhTimer == 0)
            {
                grav = .12;
                yspeed = storedYSpd;
                xspeed = storedXSpd;
            }
        }
    }
    else if (objGoldragon.phase == 1)
    {
        dang+= 3;
        x = objGoldragon.targetSpot + round(cos(degtorad(dang)) * 8);
        y = objGoldragon.y + (16 * num);
    }
    else if (objGoldragon.phase == 2)
    {
        bruhTimer-= (bruhTimer &gt; -1);
        bruhTimer2-= (bruhTimer2 &gt; -1);
        if (bruhTimer == 0 || bruhTimer2 == 0)
        {
            check++;
            if (check &lt; 4)
            {
                xspeed = storedXSpd;
                yspeed = storedYSpd;
            }
            else
            {
                xspeed = storedXSpd2;
                yspeed = storedYSpd2;
            }
            if (num == 7 &amp;&amp; objGoldragon.shotsFired &gt; 0)
            {
                playSFX(sfxEnemyShootClassic);
                instance_create(x + round(cos(degtorad(dang)) * 10),
                y + round(sin(degtorad(dang)) * 10), objExplosion);
                with (instance_create(x + round(cos(degtorad(dang)) * 10),
                y + round(sin(degtorad(dang)) * 10), objEnemyBullet))
                {
                    sprite_index = sprGrabBuster;
                    image_speed = .25;
                    if (instance_exists(target))
                        aimAtTarget(3);
                    else
                    {
                        xspeed = -other.xspeed;
                        yspeed = -other.yspeed;
                    }
                }
            }
        }
        if (yspeed &gt; 0 &amp;&amp; bbox_top &gt;= view_yview + 224)
        {
            check = 0;
            yspeed = 0;
            if (num == 7)
            {
                with (objGoldragon)
                {
                    phase = 0;
                    bruhTimer = 0;
                    shotsFired = 0;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
