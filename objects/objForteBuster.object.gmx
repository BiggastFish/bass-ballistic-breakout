<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprForteBusterShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var chargeTime = 57; // Set charge time for this weapon
var chargeTimeExtra = 33;
var initChargeTime = 20;

if (!global.lockBuster)
{
    if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT) 
    &amp;&amp; chargeTimer == 0)
    {
        i = fireWeapon(28, 0, objForteBusterShot, 3, 0, 1, 0);
        if (i)
        {
            i.xspeed = image_xscale * 5.5; // zoom
        }
    }
    
    //////////////
    // Charging //
    //////////////
    
    if (global.enableCharge)
    {
        if (((global.keyShoot[playerID]) || (isSlide &amp;&amp; chargeTimer &gt; 0)) 
        &amp;&amp; !playerIsLocked(PL_LOCK_CHARGE))
        {
            if (!isShoot)
            {
                isCharge = true;
                
                if (!isSlide)
                {
                    initChargeTimer += 1;
                }
                
                if (initChargeTimer &gt;= initChargeTime)
                {
                    if (!chargeTimer)
                    {
                        playSFX(sfxCharging);
                    }
                    
                    chargeTimer++;
                    
                    if (chargeTimer &lt; chargeTime)
                    {
                        var chargeTimeDiv, chargeCol;
                        chargeTimeDiv = round(chargeTime / 3);
                        
                        if (chargeTimer &lt; chargeTimeDiv)
                        {
                            chargeCol = make_color_rgb(0,88, 0); // Dark green
                        }
                        else if (chargeTimer &lt; chargeTimeDiv * 2)
                        {
                            chargeCol = make_color_rgb(0, 168, 68); // Green
                        }
                        else
                        {
                            chargeCol = make_color_rgb(88, 248, 152); // Light green
                        }
                        
                        if (chargeTimer mod 6 &gt;= 0 &amp;&amp; chargeTimer mod 6 &lt; 3)
                        {
                            global.outlineCol[playerID] = chargeCol;
                        }
                        else
                        {
                            global.outlineCol[playerID] = c_black;
                        }
                    }
                    else
                    {
                        if (chargeTimer == chargeTime)
                        {
                            audio_stop_sound(sfxCharging);
                            playSFX(sfxCharged);
                        }
                        if (!inked)
                        {
                            switch (floor(chargeTimer / 3 mod 3))
                            {
                                case 0: // Light green helmet, black shirt, green outline 
                                    global.primaryCol[playerID] = make_color_rgb(88, 248, 152);
                                    global.secondaryCol[playerID] = c_black;
                                    global.outlineCol[playerID] = make_color_rgb(0, 168, 68);
                                    break;
                                case 1: // Black helmet, green shirt, light green outline 
                                    global.primaryCol[playerID] = c_black;
                                    global.secondaryCol[playerID] = make_color_rgb(0, 168, 68);
                                    global.outlineCol[playerID] = make_color_rgb(88, 248, 152);
                                    break;
                                case 2: // Green helmet, light green shirt, black outline 
                                    global.primaryCol[playerID] = make_color_rgb(0, 168, 68);
                                    global.secondaryCol[playerID] = make_color_rgb(88, 248, 152);
                                    global.outlineCol[playerID] = c_black;
                                    break;
                            }
                        }
                        if (chargeTimer &gt;= chargeTime + chargeTimeExtra)
                        {
                            if (chargeTimer == chargeTime + chargeTimeExtra)
                            {
                                playSFX(sfxBassBloop);
                            }
                            if (floor(chargeTimer / 3 mod 3) == 0)
                            {
                                var sDir = choose(1, -1),
                                    sOff = irandom(4);
                                m = instance_create(x + (sDir * 2) + (sOff * sDir),
                                y, objTrailEffect)
                                m.depth = depth + choose(-1, 1);
                                m.sprite_index = sprForteBusterSweat;
                                m.image_alpha = 1;
                                m.vspeed = -2;
                                m.deathTimerMax = 4;
                            }
                        }
                    }
                }
            }
        }
        else // Release the charge shot
        {
            if (!playerIsLocked(PL_LOCK_SHOOT) &amp;&amp; chargeTimer != 0)
            {
                /////////////////////
                // ACTUAL SHOOTING //
                /////////////////////
                
                if (chargeTimer &lt; chargeTime) // Half charge
                {
                    i = fireWeapon(21, 0, objForteBusterShotHalfCharged, 3, 0, 1, 0);
                    if (i)
                    {
                        i.xspeed = image_xscale * 5.5;
                    }
                }
                if ((chargeTimer &gt;= chargeTime + chargeTimeExtra) &amp;&amp; !climbing &amp;&amp; 
                yDir != 0)
                {
                    if (isSlide)
                    {
                        isSlide = 0;
                    }
                    if (yDir == -1)
                    {
                        a = instance_create(x, y, objRisingKick);
                        a.image_xscale = image_xscale;
                    }
                    else
                    {
                        a = instance_create(x, y, objCrescentKick);
                        a.image_xscale = image_xscale;
                    }
                }
                else if (chargeTimer &gt;= chargeTime) // Full charge
                {
                    i = fireWeapon(29, 0, objForteBusterShotCharged, 3, 0, 1, 0);
                    if (i)
                    {
                        i.xspeed = image_xscale * 5.5;
                    }
                }
                // Reset all charging stuff
                chargeTimer = 0;
                initChargeTimer = 0;
                audio_stop_sound(sfxCharged);
                audio_stop_sound(sfxCharging);
                playerPalette(); // Reset the colors
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("FORTE BUSTER", make_color_rgb(112, 112, 112), make_color_rgb(248, 152, 56), sprWeaponIconsForteBuster);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
