<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPerfumaVine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 80;
healthpoints = healthpointsStart;
contactDamage = 4;
canDamage = 0;
hitInvun = 90;
phase = 0;
parent = noone;
cooldownTimer = 0;
canFight = 0;
dieTimer = 0;
blockCollision = 0;
despawnRange = -1;
grav = 0;
canIce = 0;
imgTop = 64;
bounceMomentum = 0;
global.BounceXVel = 0;
global.MeBounce = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (cooldownTimer)
        cooldownTimer--;
    canDamage = (bounceMomentum &lt; .6);
    with (objMegaman)
    {
        if (!teleporting &amp;&amp; !showReady)
        {
            with (other)
            {
                var meg = other.id;
                if (instance_place(x, y, meg) &amp;&amp; !cooldownTimer)
                {
                    if (meg != noone &amp;&amp; meg.iFrames == 0 &amp;&amp; canHit)
                        with (meg)
                            playerGetHit(other.contactDamage);
                    cooldownTimer = 30;
                    if (bounceMomentum &gt;= .6)
                    {
                        meg.dashJumped = 0;
                        meg.isSlide = 0;
                        meg.yspeed = -3;
                        playSFX(sfxEnemyBoost);
                        global.BounceXVel = 16 * image_xscale;
                        global.MeBounce = id;
                    }
                }
                
                if (global.BounceXVel != 0 &amp;&amp; global.MeBounce == id)
                {
                    global.BounceXVel = global.BounceXVel / 1.1;
                    if (instance_exists(meg))
                    {
                        with (meg)
                        {
                            if (ground &amp;&amp; abs(global.BounceXVel) &lt; 0.2)
                            {
                                global.BounceXVel = 0;
                            }
                            shiftObject(global.BounceXVel, 0, 1);
                        }
                    }
                }
            }
        }
    }
    if (instance_exists(parent))
    {
        if (parent.isFight)
            canFight = true;
        if (canFight)
        {
            x = parent.x;
            y = parent.bbox_bottom;
            image_xscale = parent.image_xscale;
            bounceMomentum = abs(parent.scrollSpeed);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase &lt; 3)
{
    event_inherited();
    //draw_text(view_xview + 32, view_yview + 32, global.BounceXVel);
}
else
    draw_sprite_part_ext(sprite_index, image_index, 0, 64 - imgTop, 64, imgTop, 
    x - 32, y - 32 + (64 - imgTop), image_xscale, 1, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
