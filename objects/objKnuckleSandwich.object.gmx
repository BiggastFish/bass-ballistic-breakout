<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskMegaman</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 3;

penetrate = 3; // obviously we don't want to destroy the control for the dash
pierces = 2;
killOverride = true;
canDamage = false;

visible = 0;

shiftVisible = 3;
despawnRange = -1;

playSFX(sfxBreakDash); // needs its own sfx later

flashTimer = 0;
flashOffset = 0;

animTimer = 0;
animFrame = 0;

dashTimer = 35;
dashSpeed = 2.5;
hitSomething = false;

breakDashLock = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(parent))
{
    with (parent)
    {
        if (other.breakDashLock)
        {
            lockPoolRelease(other.breakDashLock);
        }
        if (other.hitSomething)
        {
            canMinJump = false;
            yspeed = gravDir * -4;
            playSFX(sfxEnemyBoost);
            f = instance_create(x + (12 * image_xscale), y, objKnuckleSandwichDelay);
            f.depth = depth - 5;
            f.image_xscale = sign(image_xscale);
        }
        xspeed = 0;
        hitTimer = 0;
        iFrames = 20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// check for parent
if (!instance_exists(parent))
{
    instance_destroy();
    exit;
}
else
{
    image_xscale = parent.image_xscale * 1.2;
    
    x = parent.x //+ (4 * image_xscale); // stay attached to MM
    y = parent.y;
}

if (!global.frozen)
{
    // iFrames fist/dash
    flashTimer += 1;
    if (flashTimer == 3)
    {
        flashOffset = !flashOffset;
        flashTimer = 0;
    }
    
    // real anim
    animTimer += 1;
    if (animTimer == 4)
    {
        animFrame += 2;
        if (animFrame &gt;= 6)
        {
            animFrame = 0;
        }
        animTimer = 0;
    }
    
    with (parent) // Mega Man anim + movement forcing
    {
        if (isHit)
        {
            with (other)
            {
                instance_destroy();
                exit;
            }
        }
        if (xcoll != 0)
        {
            with (other)
            {
                hitSomething = true;
                instance_destroy();
                exit;
            }
        }

        if (!other.breakDashLock)
        {
            other.breakDashLock = lockPoolLock(
                localPlayerLock[PL_LOCK_MOVE],
                localPlayerLock[PL_LOCK_JUMP],
                localPlayerLock[PL_LOCK_SHOOT],
                localPlayerLock[PL_LOCK_SLIDE],
                localPlayerLock[PL_LOCK_TURN],
                localPlayerLock[PL_LOCK_GRAVITY]);
            xspeed = 0;
            yspeed = 0;
        }

        xspeed = other.dashSpeed * other.image_xscale;
        iFrames = -1;
    }

    if(isLocked(global.playerLock[PL_LOCK_MOVE])&amp;&amp;
    isLocked(global.playerLock[PL_LOCK_TURN]))
    {
        dashTimer = 0;
        with(parent)
            xspeed = 0;
    }

    // Destroy timer
    dashTimer -= 1;
    if (dashTimer &lt;= 0 || hitSomething)
    {
        xspeed = 0;
        instance_destroy();
    }
    
    // Boolean stuff
    canDamage = true;
}
with (parent)
{
    playerHandleSprites("Break");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT) 
&amp;&amp; !instance_exists(objKnuckleSandwich) &amp;&amp; !climbing 
&amp;&amp; global.ammo[playerID, global.weapon[playerID]] &gt; 0 &amp;&amp; 
!instance_exists(objKnuckleSandwichDelay))
{
    a = instance_create(x, y, objKnuckleSandwich);
    a.image_xscale = image_xscale;
    global.ammo[playerID, global.weapon[playerID]] = max(0,
        global.ammo[playerID, global.weapon[playerID]] - 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>specialDamageValue("grounded", 3);
specialDamageValue(objSpine, 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("KNUCKLE SANDWICH", make_color_rgb(228, 0, 88), make_color_rgb(255, 160, 68), sprWeaponIconsKnuckleSandwich);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.damage != 0 &amp;&amp; instance_exists(parent))
{
    var xs = dashSpeed * parent.image_xscale * 1.5;
    
    with (other)
    {
        if (healthpoints - global.damage &lt;= 0 || object_index = objGabyoallightning)
        {
            par = object_get_parent(object_index);
            if (par == prtMiniBoss || par == prtBoss || par == prtPickup)
            {
                exit;
            }
            if (object_index == objGabyoallightning)
                event_user(EV_DEATH);
            var _i;
            _i = instance_create(x, y, objSlashEffect);
            _i.sprite_index = sprite_index;
            _i.image_index = image_index;
            _i.image_xscale = image_xscale;
            _i.image_yscale = image_yscale;
            _i.half = 'whole';
            _i.grav = 0.125;
            _i.xspeed = xs;
            _i.yspeed = -2;
        }
    }
    hitSomething = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(parent))
{
    playSFX(sfxReflect);
    hitSomething = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
