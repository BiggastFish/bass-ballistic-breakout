<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMoneyCatcherClaw</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 56;
healthpoints = healthpointsStart;
blockCollision = false;
grav = 0;
contactDamage = 4;
phase = 0;
introType = 0;

useEndStageBehavior = false;

sprite_index = sprMoneyCatcher;

daTimer = 0;
claw = noone;
popupy = 16;

// Music
music = "MM8MiniBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.600;
musicLoopSecondsEnd = 44.978;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
        y = view_yview - 48;
        visible = true;
        grav = 0;
    }
    else if (isIntro)
    {
        if (!instance_exists(claw))
        {
            claw = instance_create(x, y, objMoneyCatcherClaw);
            claw.depth = depth - 1;
            claw.parent = id;
        }
        daTimer++;
        if (daTimer == 60)
            yspeed = 3;
        if (daTimer &gt;= 15)
        {
            if (y &gt;= ystart &amp;&amp; yspeed &gt; 0)
            {
                daTimer = 165;
                yspeed = 0;
                y = ystart;
                playSFX(sfxLaserTrident);
                playSFX(sfxMinorExplosion);
                screenShake(8, 0, 2);
            }
        }
        if (daTimer == 210)
        {
            daTimer = 0;
            isIntro = false;
        }
    }

    if (isFight)
    {
        var tx = x, ty = y;
        if (instance_exists(target))
        {
            tx = target.x;
            ty = target.y;
        }
        if (!instance_exists(claw))
        {
            event_user(EV_DEATH);
            exit;
        }
        // timers
        daTimer+= (phase != 1);
        switch (phase)
        {
            case 0: // leftin right
                if (daTimer &gt;= 50)
                {
                    daTimer = 0;
                    yspeed = -2;
                    grav = 0.25;
                    phase++;
                }
                break;
            case 1: // SMASHING
                if (y &gt;= view_yview + view_hview - 36)
                {
                    grav = 0;
                    yspeed = 0;
                    with (claw) follow = false;
                    playSFX(sfxMM9Quake);
                    screenShake(36, 0, 2);
                    for (d = -4; d &lt;= 4; d++)
                    {
                        if (d != 0)
                        {
                            r = instance_create(x + (12 * sign(d)), 
                            view_yview + view_hview - 32, 
                            objMoneyCatcherWave);
                            r.image_xscale = sign(d);
                            r.xspeed = d;
                        }
                    }
                    phase++;
                }
                break;
            case 2: // go back up, do some shooties
                if (daTimer == 36)   
                    yspeed = -1;
                if (daTimer &gt; 70 &amp;&amp; (daTimer - 70) mod 30 == 0 &amp;&amp; daTimer &lt;= 190)
                {
                    playSFX(sfxPointanSelect);
                    l = instance_create(x, y + 12, objMoneyCatcherOrb);
                    l.depth = depth - 3;
                }
                if (y &lt;= ystart &amp;&amp; yspeed &lt; 0)
                {
                    y = ystart;
                    yspeed = 0;
                }
                if (daTimer == 240)
                {
                    with (claw) 
                    {
                        blockCollision = false;
                        yspeed = -2;
                    }
                }
                var check = false;
                if (claw.y &lt;= y &amp;&amp; y == ystart)
                {
                    check = true;
                }
                if (check)
                {
                    with (claw) 
                    {
                        blockCollision = true;
                        follow = true;
                    }
                    phase = 0;
                    daTimer = 0;
                    playSFX(sfxDoor);
                }
                break;
        }
        if (global.shakeTimer &gt; 0)
        {
            with (target)
            {
                if (!isShocked)
                {
                    playerGetShocked(false, 0, true, 36);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (prtEnemyProjectile)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
stopMusic();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hurtAlpha = 0.7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var length = (y - 16) - (view_yview - 4)
if (length &gt; 0)
{
    for (r = 0; r &lt; length; r++)
    {
        for (l = -1; l &lt; 2; l+= 2)
        {
            draw_sprite_ext(sprMoneyCatcherPole, 0, x + (21 * l), view_yview - 4, 
            1, length, 0, c_white, 1);
        }
    }
}
event_inherited();
if (instance_exists(claw))
{
    var clawLength = claw.bbox_top - bbox_bottom;
    if (clawLength &gt; 0 &amp;&amp; claw.y != y)
    {
        for (r = 0; r &lt; clawLength; r++)
        {
            for (l = -1; l &lt; 2; l+= 2)
            {
                draw_sprite_ext(sprMoneyCatcherPole, 0, x + (21 * l), bbox_bottom, 
                1, clawLength, 0, c_white, 1);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
