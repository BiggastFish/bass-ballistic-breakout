<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTreasureSpawner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// xDir: horizontal direction of the treasure
// yDir: vertical direction of the treasure
// treasureSpd: speed of the treasure movement
event_inherited();

canHit = 0;
canDamage = 0;
blockCollision = 0;
grav = 0;
affectHud = false;

respawnRange = -1;
despawnRange = -1;

timerStart = 0;
timer = timerStart;
timerMax = 120;
timerReset = 0;
timerDelay = 7;
treasureAngle = 0;
treasureSpd = 3;
_im = 0;
off = 0;

init = true;
shinies = 0;
shiniesMax = 6;
spawnDust = false;
canDust = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = false;
    timer = timerStart;
    image_index = (treasureAngle / 90) + 1;
}

event_inherited();

if (entityCanStep())
{
    with (objCoinSpread)
    {
        if (collision_rectangle(other.x - 1, other.y - 1, 
        other.x + 17, other.y + 17, id, 0, 0) &amp;&amp; angle == 0 
        &amp;&amp; other.canDust)
        {
            playSFX(sfxWanaan);
            with (other)
            {
                canDust = false;
                timer = 0;
            }
            instance_destroy();
        }
    }
    if (canDust)
        timer++;
    else
    {
        timer = 0;
        off+= 0.25;
        if (off &gt;= 2)
            off = 0;
    }
    if (timer == (timerMax - 20) &amp;&amp; !spawnDust)
    {
        var xDir = 0, yDir = 0;
        if (treasureAngle == 180 || treasureAngle == 0)
            xDir = 1 - (2 * (treasureAngle == 180));
        if (treasureAngle == 90 || treasureAngle == 270)
            yDir = 1 -(2 * (treasureAngle == 90));
        r = instance_create(x + 8 + (12 * xDir), y + 8 + (12 * yDir),
        objSingleLoopEffect);
        r.image_angle = xDir * 90;
        r.image_speed = 8/20;
        if (yDir != 0)
        {
            r.image_yscale = yDir;
        }
        r.sprite_index = sprHoverSmoke;
        spawnDust = true;
    }
    if (timer &gt;= timerMax)
    {
        timer-= timerDelay;
        shinies++;
        p = instance_create(x , y, objFloatingTreasure);
        p.angle = treasureAngle;
        p.spd = treasureSpd;
        p.depth = 1000010;
        if (shinies &gt;= shiniesMax &amp;&amp; shiniesMax != -1)
        {
            shinies = 0;
            spawnDust = false;
            timer = timerReset;
        }
    }
}
else if (dead)
{
    canDust = true;
    spawnDust = false;
    timer = timerStart;
    shinies = 0;
    off = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
{
    if (!canDust)
    {
        var xx, yy, xOff, yOff;
        switch (image_index)
        {
            case 1: xx = 16; yy = 8; break;
            case 2: xx = 8; yy = 0; break;
            case 3: xx = 0; yy = 8; break;
            case 4: xx = 8; yy = 16; break;
        }
        xOff = image_index &gt; 2;
        yOff = image_index &lt; 3;
        draw_sprite(sprCoinSpread, 0, x + xx + (xOff * off), y + yy + (yOff * off));
    }
    var col = make_color_rgb(0, 0, 0);
    if (timer &gt;= (timerMax - 20)) col = make_color_rgb(219, 247, 119);
    draw_sprite_ext(sprDot, 0, x, y, 16, 16, 0, col, image_alpha);
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
