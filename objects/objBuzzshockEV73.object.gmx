<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBuzzshockEV73</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 120;
healthpoints = healthpointsStart;
blockCollision = 0;
grav = 0;
contactDamage = 4;
hitInvun = 4;
affectHud = 0;
batx = 28;
baty = 16;
popupx = 28;
popupy = 6;

facePlayerOnSpawn = 0;
ground = false;
bzztTimer = 0;
shotsDone = 0;
hatchIndex = 0;
bodyIndex = 0;
thrusterTimer = 0;
thrusterIndex = 0;
blastImg = 0;
xVal = 0;
middlePoint = 0;
phase = 0;
introType = 0;
respawnRange = -1;
despawnRange = -1;
dieToPits = 0;
tx = x;

// Music
music = "HoTDBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.665;
musicLoopSecondsEnd = 70.655;

// Damage Tables
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objYamato, 3);
enemyDamageValue(objKnuckleSandwich, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Handle Intro
if (!global.frozen)
{
    thrusterTimer++;
    if (thrusterTimer mod 4 == 0)
    {
        thrusterIndex = !thrusterIndex;
    }

    // Starting the intro animation
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
    }
    else if (isIntro)
    {
        bzztTimer++;
        if (bzztTimer == 30)
        {
            y = view_yview - 48;
            yspeed = 4;
            grav = -(yspeed * yspeed) / (2 * abs(y - ystart));
            y+= 3;
            visible = 1;
        }
        if (y &gt;= ystart &amp;&amp; bzztTimer &gt;= 45)
        {
            if (bzztTimer &lt; 600) 
            {
                bzztTimer = 600;
                for (i = -1; i &lt; 2; i+= 2)
                {
                    s = instance_create(x - 18 * image_xscale + (12 * i), 
                    view_yview + view_hview - 32, objHoverSmoke);
                    s.image_xscale = i;
                    s.sprite_index = sprBuzzshockDust;
                    s.depth = depth - (5 + i);
                }
            }
            y = ystart;
            yspeed = 0;
            grav = 0;
            blockCollision = 0;
            
        }
        if (bzztTimer == 630)
        {
            bzztTimer = 0;
            isIntro = false;
            playSFX(sfxMechaDragon);
        }
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        bzztTimer++;
        if (instance_exists(target)) 
        {
            tx = target.x;
        }
        if (phase &lt; 4)
        {
            if (floor(blastImg) &gt; 0)
            {
                blastImg-= 1/3;
            }
            else 
            {
                blastImg = 0;
            }
        }
        switch (phase)
        {
            case 0: // plug stream
                if (bzztTimer == 30)
                {
                    hatchIndex = 1;
                    playSFX(sfxCommandoBombLaunch);
                    for (i = -2; i &lt; 2; i++)
                    {
                        if (i != 0)
                        {
                            m = instance_create(x - (18 * image_xscale), y + 37, 
                            objTrailEffect);
                            m.sprite_index = sprElecnSpark;
                            m.hspeed = i * 1;
                            m.vspeed = -1 + (-1 * !(i mod 2 == 0));
                            m.image_alpha = 1;
                            m.depth = depth - 20;
                        }
                    }
                }
                if (bzztTimer &gt;= 60 &amp;&amp; bzztTimer mod 5 == 0 &amp;&amp; shotsDone &lt; 14)
                {
                    playSFX(sfxElecnShoot);
                    for (m = -1; m &lt;= 1; m+= 2)
                    {
                        s = instance_create(x - (18 * image_xscale), y + 40, 
                        objChargingChesterSpark);
                        s.sprite_index = sprBuzzshockEV73Spark;
                        s.shotFrom = true;
                        s.yspeed = 3;
                        s.dir = m;
                    }
                    shotsDone++;
                }
                if (shotsDone == 14)
                {
                    shotsDone = 0;
                    bzztTimer = 0;
                    hatchIndex = 0;
                    phase = 1;
                }
                break;
            case 1: // wiggle up and parabola
                if (bzztTimer = 30)
                {
                    middlePoint = x;
                    xVal = 90;
                    yspeed = -(80/240);
                }
                if (bzztTimer &gt; 30 &amp;&amp; !shotsDone)
                {
                    bodyIndex = 1;
                    if (bbox_top - 32 &gt; (view_yview + 16))
                    {
                        xVal-= (3 * image_xscale);
                        x = middlePoint + round(cos(degtorad(xVal)) * 32);
                    }
                    else
                    {
                        yspeed = 0;
                        xVal = 0;
                        bzztTimer = 0;
                        if (shotsDone &lt; 1)
                        {
                            shotsDone = 1;
                            bodyIndex = 2;
                        }
                    }
                    if (bzztTimer &gt;= 60 &amp;&amp; bzztTimer % 30 = 0)
                    {
                        playSFX(sfxElectricShot);
                        with instance_create(x + 2 * image_xscale, y - 40, 
                        objEnemyBullet)
                        {
                            sprite_index = sprSparkSnakeyShot;
                            image_speed = 0.4;
                            if (instance_exists(target)) aimAtTarget(2);
                            else yspeed = 2;
                        }
                        blastImg = 5;
                    }
                }
                if (shotsDone)
                {
                    if (bzztTimer == 50)
                    {
                        var airtime, ySpd, xEnd, xStart, xDisplace;
                        grav = -0.17;
                        ySpd = -sqrt(abs(2*0.2*96));
                        yspeed = -ySpd
                        airtime = abs(2*yspeed/0.17);
                        xEnd = x + (128 * image_xscale);
                        xStart = x;
                        xDisplace = xEnd - xStart;
                        xspeed = xDisplace / airtime;
                    }
                    if (bzztTimer &gt;= 40 &amp;&amp; bzztTimer mod 40 == 0)
                    {
                        if (instance_number(objRingRing) &lt; 3)
                        {
                            playSFX(sfxBariIIIRegen);
                            r = instance_create(x + (10 * image_xscale), 
                            y - 24, objRingRing);
                            r.respawn = 0;
                            r.itemDrop = -1;
                        }
                    }
                }
                if (bbox_bottom &lt; view_yview - 16)
                {
                    xspeed = 0;
                    yspeed = 0;
                    grav = 0;
                    shotsDone = 0;
                    bzztTimer = 0;
                    phase = 2;
                    x = view_xview + 128 + (48 * image_xscale);
                    y = view_yview - 48;
                    image_xscale*=-1;
                }
                break;
            case 2: // whoosh
                if (bzztTimer == 30)
                {
                    bodyIndex = 0;
                    yspeed = 4;
                    grav = -(yspeed * yspeed) / (2 * abs(y - ystart));
                    y+= 3;
                }
                if (bzztTimer &gt; 30 &amp;&amp; (yspeed &lt;= 0 || y &gt;= ystart))
                {
                    for (i = -1; i &lt; 2; i+= 2)
                    {
                        s = instance_create(x - 18 * image_xscale + (12 * i), 
                        view_yview + view_hview - 32, objHoverSmoke);
                        s.image_xscale = i;
                        s.sprite_index = sprBuzzshockDust;
                        s.depth = depth - (5 + i);
                    }
                    y = ystart;
                    grav = 0;
                    yspeed = 0;
                    phase = 3;
                    bzztTimer = 0;
                    m = instance_create(x, y, prtEffect);
                    m.sprite_index = sprite_index;
                    m.image_index = 1;
                    m.image_xscale = image_xscale;
                    m.depth = depth + 4;
                }
                break;
            case 3: // spark and lightning
                if ((bzztTimer - 30) mod 120 == 0
                &amp;&amp; bzztTimer &lt;= 270)
                {
                    playSFX(sfxDoor);
                    hatchIndex = 1;
                }
                if ((bzztTimer - 50) mod 120 == 0
                &amp;&amp; bzztTimer &lt;= 290)
                {
                    hatchIndex = 0;
                }
                if ((bzztTimer &gt;= 40 &amp;&amp; bzztTimer &lt;= 50 || 
                bzztTimer &gt;= 160 &amp;&amp; bzztTimer &lt;= 170 ||
                bzztTimer &gt;= 280 &amp;&amp; bzztTimer &lt;= 290) &amp;&amp; 
                bzztTimer mod 5 = 0)
                {
                    playSFX(sfxElecnShoot);
                    for (m = -1; m &lt;= 1; m+= 2)
                    {
                        s = instance_create(x - (18 * image_xscale), y + 40, 
                        objChargingChesterSpark);
                        s.sprite_index = sprBuzzshockEV73Spark;
                        s.shotFrom = true;
                        s.yspeed = 3;
                        s.dir = m;
                    }
                }
                if ((bzztTimer &gt;= 45) &amp;&amp; 
                ((bzztTimer - 45) mod 120 == 0)
                &amp;&amp; bzztTimer &lt;= 285)
                {
                    bodyIndex = 2;
                }
                if ((bzztTimer &gt;= 60) &amp;&amp; ((bzztTimer - 60) mod 120 == 0)
                &amp;&amp; bzztTimer &lt;= 300)
                {
                    bodyIndex = 0;
                    playSFX(sfxAirShooter);
                    s = instance_create(x + (10 * image_xscale), y - 8,
                    objBuzzshockSpark);
                    s.depth = depth + 2;
                    s.dir = image_xscale;
                    s.yMov = y - 56;
                }
                if (bzztTimer &gt;= 300 &amp;&amp; !instance_exists(objBuzzshockSpark))
                {
                    bzztTimer = 0;
                    phase = 0;
                    with (prtEffect)
                    {
                        if (sprite_index == other.sprite_index)
                        {
                            instance_destroy();
                        }
                    }
                } 
                break;
            case 4: //moving to center of room
                x = xVal + round(cos(degtorad(irandom(360))) * 4);
                y = middlePoint + round(sin(degtorad(irandom(360))) * 4);
                visible = choose(0, 0, 1);
                if (bzztTimer mod 4 == 0)
                {
                    playSFX(sfxExplosion);
                    w = instance_create(x + irandom_range(-32, 32), 
                    y  + irandom_range(-32,32), objExplosion);
                    w.vspeed = -2;
                    w.image_speed = 1/2;
                    w.image_blend = make_color_rgb(248, 184, 0);
                }
                if (bzztTimer == 30)
                {
                    blastImg = abs(xVal - (view_xview + 128)) / 60;
                    if (xVal &gt; view_xview + 128)
                    {
                        blastImg = -blastImg;
                    }
                    shotsDone = abs(middlePoint - (view_yview + 120)) / 60;
                    if (middlePoint &gt; view_yview + 120)
                    {
                        shotsDone = -shotsDone;
                    }
                }
                if (bzztTimer &gt;= 30)
                {
                    xVal+= blastImg;
                    middlePoint+= shotsDone;
                }
                if (bzztTimer == 120)
                {
                    blastImg = 0;
                    shotsDone = 0;
                    xVal = view_xview + 128;
                    middlePoint = view_yview + 120;
                }
                if (bzztTimer == 180)
                {
                    x = view_xview + 128;
                    y = view_yview + 120;
                    event_user(EV_DEATH);
                }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_rectangle(x + 14 * image_xscale, y - 23,
x - 52 * image_xscale, y + 28, other.id, false, false))
    other.guardCancel = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase &lt; 4)
{
    stopMusic();
    with (prtEffect)
    {
        instance_destroy();
    }
    with (prtEnemyProjectile)
    {
        instance_create(x, y, objExplosion);
        instance_destroy();
    }
    with (objRingRing)
    {
        instance_create(x, y, objExplosion);
        instance_destroy();
    }
    with (objBuzzshockSpark)
    {
        instance_create(x, y, objExplosion);
        instance_destroy();
    }
    bzztTimer = 0;
    grav = 0;
    blastImg = 0;
    shotsDone = 0;
    yspeed = 0;
    xspeed = 0;
    xVal = x;
    middlePoint = y;
    canHit = 0;
    canDamage = 0;
    phase = 4;
}
else
{
    event_inherited();
    screenFlash(5);
    screenShake(30, 2, 2);
    tile_layer_show(1000035);
    tile_layer_hide(1000025);
    playSFX(sfxTornadoBlow);
    playSFX(sfxCentaurFlash);
    playSFX(sfxExplosion2);
    for (i = -3; i &lt; 4; i++)
    {
        f = instance_create(view_xview + 128 + (24 * i), 
        view_yview + 112 + irandom_range(-32, 32), objGravEffect);
        f.sprite_index = sprChillBlockShards;
        f.image_index = irandom(2);
        f.yspeed = -3;
        f.xspeed = random_range(-1, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hurtAlpha = 0.7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var r = (bodyIndex == 1),
    b = (bodyIndex == 2),
    h = hatchIndex,
    t = thrusterIndex;

// rod
if (phase != 3)
{
    draw_sprite_ext(sprite_index, 1 + r, round(x), round(y),
    image_xscale, 1, 0, c_white, 1);
}

// face
draw_sprite_ext(sprite_index, 3 + ((iFrames &gt; 0) || (phase == 4)), round(x), round(y), 
image_xscale, 1, 0, c_white, hurtAlpha);

// body
draw_sprite_ext(sprite_index, 5 + b, round(x), round(y),
image_xscale, 1, 0, c_white, 1);

// hatch
draw_sprite_ext(sprite_index, 7 + h, round(x), round(y), 
image_xscale, 1, 0, c_white, 1);

// thruster
draw_sprite_ext(sprite_index, 9 + t, round(x), round(y), 
image_xscale, 1, 0, c_white, 1);

// explosion for rod
if (blastImg &amp;&amp; phase &lt; 4)
{
    draw_sprite(sprExplosion, 5 - blastImg, x + 2 * image_xscale, y - 40);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
