<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTheWizard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 108;
healthpoints = healthpointsStart;
blockCollision = false;
grav = 0;
contactDamage = 4;
phase = 0;
introType = 0;

useEndStageBehavior = false;

wizTimer = 0;
shots = 0;
lastX = x;
lastY = y;

// Music
music = "MM8MiniBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.600;
musicLoopSecondsEnd = 44.978;

// Damage Tables
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objYamato, 3);
enemyDamageValue(objKnuckleSandwich, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
        y = view_yview - 48;
        visible = true;
        sprite_index = sprExplosion;
        image_speed = 1/3;
        image_blend = make_color_rgb(104, 68, 252);
    }
    else if (isIntro)
    {
        wizTimer++;
        if (y &lt; ystart)
        {
            y+= 3;
        }
        if (wizTimer mod 3 == 0 &amp;&amp; sprite_index == sprExplosion)
        {
            f = instance_create(x + irandom_range(-4, 4),
            y - irandom(4), objSingleLoopEffect);
            f.image_index = 2
            f.image_speed = -1/4;
            f.image_blend = make_color_rgb(104, 68, 252);
            f.vspeed = 1.75;
            f.depth = depth - 1;
        }
        with (objSingleLoopEffect)
        {
            if (sprite_index == sprFlashTwinkle)
            {
                if (vspeed &gt; -3)
                {
                    vspeed-= 0.8;
                }
            }
        }
        if (wizTimer == 96)
        {
            playSFX(sfxBusterCharged);
            sprite_index = sprTheWizard;
            image_blend = c_white;
            image_speed = 0;
            with (objSingleLoopEffect)
            {
                if (sprite_index == sprFlashTwinkle)
                {
                    instance_destroy();
                }
            }
            for (k = 0; k &lt; 8; k++)
            {
                h = instance_create(x, y, objSingleLoopEffect);
                h.sprite_index = sprExplosion;
                h.image_speed = 1/3;
                h.image_blend = make_color_rgb(104, 68, 252);
                h.speed = 3;
                h.direction = (45 * k) + 22.5;
            }
        }
        if (wizTimer == 120)
        {
            isIntro = false;
            wizTimer = 0;
        }
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        var yeah = view_xview + 128, tx = x, ty = y, dir = 90;
        if (instance_exists(target))
        {
            tx = target.x;
            ty = target.y;
            dir = point_direction(x, y - 12, tx, ty);
        }

        wizTimer++;
        switch (phase)
        {
            case 0:
                if (wizTimer == 15)
                {
                    xspeed = (yeah - x) / 30;
                    yspeed = (ystart - y) / 30;
                }
                if (wizTimer == 45)
                {
                    xspeed = 0;
                    yspeed = 0;
                    x = yeah;
                    y = ystart;
                    image_xscale = -1;
                }
                if (wizTimer == 70)
                {
                    playSFX(sfxHomingSniperLock);
                    p = instance_create(view_xview, ty, objTheWizardLaser);
                    p.depth = depth + 2;
                }
                if (wizTimer &gt;= 210 &amp;&amp; (wizTimer - 210) mod 16 == 0 &amp;&amp; shots &lt; 6)
                {
                    playSFX(sfxFireManFireStorm);
                    r = instance_create(x, y, objTheWizardFire);
                    r.ang = 50 + (80 * (shots mod 2 == 0));
                    r.depth = depth + 1;
                    shots++;
                }
                if (wizTimer &gt;= 315)
                {
                    wizTimer = 0;
                    shots = 0;
                    phase = 1;
                }
                break;
            case 1:
                calibrateDirectionPoint(yeah);
                if (wizTimer == 15)
                {
                    var midRan = choose(-1, 1), xx, yy;
                    do
                    {
                        if (x != yeah)
                        {
                            if (x &gt; yeah)
                            {
                                midRan = -1;
                            }
                            else
                            {
                                midRan = 1;
                            }
                        }
                        xx = yeah + (midRan * (56 + (irandom(2) * 12)));
                        yy = ystart + (irandom(2) * 16);
                    }
                    until ((yy != lastY) &amp;&amp; (abs(yeah - xx) != abs(yeah - lastX)))
                    xspeed = (xx - x)/30;
                    yspeed = (yy - y)/30;
                    lastX = xx;
                    lastY = yy;
                }
                if (wizTimer == 45)
                {
                    xspeed = 0;
                    yspeed = 0;
                    x = lastX;
                    y = lastY;
                }
                if (wizTimer == 75)
                {
                    playSFX(sfxSharkLaser);
                    head = instance_create(x, y - 12, objTheWizardOrb);
                    head.dir = dir + 28;
                    head.depth = depth - 3;
                    tails = instance_create(x, y - 12, objTheWizardOrb);
                    tails.dir = dir - 28;
                    tails.depth = depth - 2;
                    ring = instance_create(x, y - 12, objTheWizardRing);
                    ring.parent = head;
                    ring.otherParent = tails;
                    ring.depth = depth - 1;
                    shots++;
                }
                if (wizTimer == 140)
                {
                    wizTimer = 0;
                    if (shots &gt;= 3)
                    {
                        shots = 0;
                        phase = 0;
                    }
                }
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (prtEnemyProjectile)
{
    if (object_index != objTheWizardLaser)
    {
        m = instance_create(x, y, objExplosion);
        m.depth = depth - 1;
    }
    else
    {
        r = instance_create(x, y, objTrailEffect);
        r.sprite_index = sprite_index;
        r.image_xscale = image_xscale;
        r.image_alpha = 0.6;
        r.depth = depth + 1;
        r.deathTimerMax = 10;
        r.fadeInterval = 3;
        r.fadeAway = true;
    }
    instance_destroy();
}
event_inherited();
stopMusic();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
