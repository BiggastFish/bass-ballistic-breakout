<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// variables

controlsLocked = true;

selection = 0;

optionText[0] = "Return to Menu";
optionText[1] = "Try Again";

global.checkpoint = false;
global.livesRemaining = max(global.defaultLives, global.livesRemaining);

playMusic("Mega_Man_3.nsf", "VGM", 53, 0, 0, true, 1);

fadeInTimer = 120;
rewardTimer = 0;
spinSpeed = 10 / 40;
spinFrame = 0;
rewardN = 0;
currentReward = 0;
flashTimer = 0;
textTick = 6;
textTimer = 0;
finalFadeOut = false;
for (var i = 1; i &lt; array_length_1d(global.levelReward); i++)
{
    reward[rewardN++] = global.levelReward[i];
    setWeaponLocked(global.levelReward[i], false);
}

global.levelReward = makeArray(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// advance animation
weaponObject = reward[currentReward];
weapon = global.weaponID[? weaponObject];
rewardText = "YOU GOT " + global.weaponName[weapon] + ".";

if (rewardTimer &lt; 750)
{
    rewardTimer++;
    var xx = 0, 
        yy = 0, 
        hspd = 0, 
        vspd = 0,
        imgUsed = 0;

    switch (rewardTimer)
    {
        case 40:
            xx = 164;
            yy = -118;
            vspd = 6;
            break;
        case 60:
            xx = -80;
            yy = 72;
            hspd = 6;
            imgUsed = 1;
            break;
        case 80:
            xx = 42;
            yy = 240;
            vspd = -6;
            imgUsed = 2;
            break;
        case 100:
            xx = 256;
            yy = 132;
            hspd = -6;
            imgUsed = 3;
            break;
    }
    
    if (rewardTimer &gt;= 40 &amp;&amp; rewardTimer mod 20 == 0 &amp;&amp; rewardTimer &lt;= 100)
    {
        playSFX(sfxDash);
        e = instance_create(xx, yy, objWeaponGetSilhouette);
        e.vspeed = vspd;
        e.hspeed = hspd;
        e.image_index = imgUsed;
    }

    if (rewardTimer &gt; 720)
    {
        controlsLocked = false;
    }
}


/// controls

if (!controlsLocked)
{
    var selected = false;
    for (var i = 0; i &lt; global.playerCount; i++)
    {
        selected = selected || global.keyPausePressed[i];
    }
    
    // select an option
    if (selected)
    {
        if (currentReward == rewardN - 1)
        {
            // go home:
            returnFromLevel();
            controlsLocked = true;
            finalFadeOut = true;
            playSFX(sfxMenuSelect);
        }
        else
        {
            currentReward++;
            rewardTimer = 0;
            flashTimer = 0;
            textTimer = 0;
        }
    }
}

spinFrame += spinSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*for (var i = 0; i &lt; global.playerCount; i++)
{
    var drawX = x + i * 24 - (global.playerCount - 1) * 12;
    var drawY = y - 16;
    var p = clamp(roundTo((fadeInTimer) / 45, 1 / 3), 0, 1);
    
    // determine weapon colours
    var cp, cs, ap = 1, as = 1;
    var wpn = 0;
    if (flashTimer mod 10 &lt; 5)
    {
        if (currentReward != 0)
        {
            wpn = global.weaponID[? reward[currentReward - 1]];
        }
    }
    else
    {
        wpn = global.weaponID[? reward[currentReward]];
    }
    
    if (global.weaponPrimaryColor[wpn] &lt; 0)
    {
        ap = 0;
        cp = 0;
    }
    else
    {
        cp = global.weaponPrimaryColor[wpn];
    }
    
    if (global.weaponSecondaryColor[wpn] &lt; 0)
    {
        as = 0;
        cs = 0;
    }
    else
    {
        cs = global.weaponSecondaryColor[wpn];
    }
    
    // draw player
    drawCostume(global.playerSprite[i], floor(spinFrame) mod 10, 11, drawX, drawY, 1, 1, c_white, cp, cs, c_black, 1, ap, as, 1);
    
    // fade darken
    drawCostume(global.playerSprite[i], floor(spinFrame) mod 10, 11, drawX, drawY, 1, 1, c_black, c_black, c_black, c_black, p, 0, 0, 0);
}

clearDrawState();

if (textTimer &gt; 0)
{
    draw_text(view_wview[0] / 2 - string_width(rewardText) / 2, view_hview[0] - 32, stringSubstring(rewardText, 1, 1 + textTimer div textTick));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
