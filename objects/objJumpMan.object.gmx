<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJumpMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthpointsStart = 160;
healthpoints = healthpointsStart;
contactDamage = 4;
phase = 0;
introType = 0;
shots = 0;
gangsTimer = 0;
_im = 0;

// Music
music = "HoTDBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.665;
musicLoopSecondsEnd = 70.655;

// Damage Tables
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objCoinSpread, 4);
enemyDamageValue(objYamato, 2);
enemyDamageValue(objKnuckleSandwich, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Handle Intro
if (!global.frozen)
{
    // Starting the intro animation
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
    }
    else if (isIntro)
    {
        visible = true;
        isIntro = false;
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        var tx = x + (16 * image_xscale), ty = y,
        top = global.sectionTop, yeah = view_xview + 128;
        if (instance_exists(target))
        {
            tx = target.x;
            ty = target.y;
        }
        with (objSolid) 
        {
            if (collision_rectangle(other.x - 7, view_yview, other.x + 7, 
            other.bbox_top, id, false, false)) 
            {
                top = bbox_bottom + 1;
            }
        }
        if (!global.shakeTimer &amp;&amp; !instance_exists(objEnemyBullet))
            gangsTimer++;
        switch (phase)
        {
            case 0: // grenade!!
                if (gangsTimer == 16)
                    image_index = 1;
                if (gangsTimer == 20)
                {
                    playSFX(sfxEnemyDrop);
                    image_index = 2;
                    m = instance_create(x, y - 8, objJumpManGrenade);
                    m.form = 0;
                    m.yspeed = -abs(top - bbox_top) / 20;
                    shots++;
                }
                if (global.shakeTimer || instance_exists(objEnemyBullet))
                    image_index = 1;
                else if (gangsTimer &gt; 20)
                    image_index = 0;
                if (gangsTimer == 56)
                {
                    gangsTimer = 0;
                    phase = 1;
                }
                break;
            case 1: // WAHOOOOOO
                var dx = x, dy = y;
                if (abs(yeah - x) &lt; 4)
                    dx = x + (64 * choose(-1, 1));
                else
                    dx = x + (64 * sign(yeah - x));
                if (abs(ystart - y) &lt; 4)
                    dy = y + 64;
                else
                    dy = y - 64;
                if (gangsTimer == 8)
                    image_index = 1;
                if (gangsTimer == 12)
                {
                    yspeed = -(5 + (2 * (y &gt; ystart + 12)));
                    xspeed = arcCalcXspeed(yspeed, grav, x, y, dx, dy);
                }
                if (gangsTimer &gt; 12)
                {
                    animationLoop(3, 4, 0.35);
                    if (ycoll &gt; 0)
                    {
                        if (shots == 2)
                        {
                            yspeed = -(5 + (2 * (y &gt; ystart + 12)));
                            xspeed = arcCalcXspeed(yspeed, grav, x, y, 
                            dx, dy);
                            shots = 3;
                        }
                        else
                        {
                            gangsTimer = 0;
                            xspeed = 0;
                            calibrateDirection();
                            image_index = 0;
                            if (shots == 3) 
                            {
                                shots = 0;
                                phase = 2;
                            }
                            else
                                phase = 0;
                        }
                    }
                }
                break;
            case 2: // gungeunugun pewpewpw
                if (gangsTimer == 12 || gangsTimer == 48)
                {
                    playSFX(sfxCrashBombArm);
                    image_index = 5;
                }
                if (gangsTimer == 25)
                {
                    calibrateDirection();
                    image_index = 6;
                }
                if (gangsTimer == 30)
                {
                    calibrateDirection();
                    if (shots &lt; 10)
                    {
                        playSFX(sfxColtonShoot);
                        image_index = 7;
                        l = instance_create(tx, ty, objJumpManGunShot);
                        l.image_xscale = choose(-1, 1);
                        gangsTimer-= 7;
                        shots++;
                    }
                }
                if (gangsTimer &gt;= 108)
                {
                    calibrateDirection();
                    image_index = 0;
                    gangsTimer = 0;
                    phase = 1;
                    shots = 0;
                }
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (prtEnemyProjectile)
{
    if (object_index != objJumpManGunShot || object_index != objHarmfulExplosion) 
        instance_create(x, y, objExplosion);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
