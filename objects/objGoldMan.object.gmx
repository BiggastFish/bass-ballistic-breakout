<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGoldMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthpointsStart = 120;
healthpoints = healthpointsStart;
blockCollision = 0;
grav = 0;
contactDamage = 4;
son = noone;
facePlayerOnSpawn = 1;
dropTimer = 0;
flyTimer = 0;
angVal = 270;
midPointY = y + 12;
midPointX = x;
phase = 0;
introType = 0;
dropsDone = 0;
tx = x;
ty = y;
targetSpot = tx;

phaseArray[0] = 4;
phaseArray[1] = 5;
phaseArray[2] = 6;
phaseArray[3] = 4;
phaseArray[4] = 5;
phaseArray[5] = 6;
phaseArray[6] = 4;
phaseArray[7] = 5;
phaseArray[8] = 6;
phaseArrayDir = 1;
phasePick = 3 + irandom(2);
phaseLeft = 2;
lastPhase = 0;

// Music
music = "HoTDBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.665;
musicLoopSecondsEnd = 70.655;

// Damage Tables
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objYamato, 3);
enemyDamageValue(objKnuckleSandwich, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Handle Intro
if (!global.frozen)
{
    // Starting the intro animation
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
    }
    else if (isIntro)
    {
        visible = 1;
        son = instance_create(view_xview + 208, view_yview + 176, objGoldem);
        son.parent = id;
        isIntro = false;
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        flyTimer++;
        if (instance_exists(target))
        {
            tx = target.x;
            ty = target.y;
        }
        var yeah = view_xview + 128;
        if (healthpoints &lt;= healthpointsStart/2 &amp;&amp; phase &lt; 3)
        {
            phase = 3;
            flyTimer = 0;
            dropTimer = 0;
            dropsDone = 0;
            xspeed = 0;
            yspeed = 0;
            midPointX = yeah;
            image_index = 0;
            with (prtEnemyProjectile)
            {
                instance_create(x, y, objExplosion);
                instance_destroy();
            }
            with (son)
            {
                xspeed = 0;
                canHit = 0;
                canDamage = 0;
                phase = 3;
            }
        }
        switch (phase)
        {
            case 0: // he's just floating there
                if (angVal &gt;= 990)
                    dropTimer++;
                if (dropTimer &lt; 15)
                    dropTimer++
                if ((dropTimer &gt;= 15 &amp;&amp; angVal &lt; 990) || dropsDone &gt; 1)
                {
                    angVal+= 9;
                    x = midPointX + round(cos(degtorad(angVal)) * 12);
                    y = midPointY + round(sin(degtorad(angVal)) * 12);
                }
                if (angVal &gt;= 990 &amp;&amp; dropTimer &gt;= 45
                &amp;&amp; dropsDone &lt; 2)
                {
                    phase = 1;
                    angVal = 270;
                    targetSpot = tx;
                    flyTimer = 0;
                    dropTimer = 0;
                }
                break;
            case 1: // drop shit on bass
                if (dropTimer &lt; 40)
                    if (mp_linear_step(targetSpot, view_yview + 112, 4, 0))
                        dropTimer++;
                if (dropTimer &gt; 40)
                    dropTimer++;
                if (dropTimer == 40)
                {
                    dropTimer++
                    playSFX(sfxCannonShoot);
                    instance_create(x, y + 24, objGoldManDrop);
                    dropsDone++;
                }
                if (dropTimer &gt;= 80)
                {
                    image_index = 0;
                    if (dropTimer == 80)
                    {
                        if (x &gt; yeah)
                            midPointX = yeah - 64;
                        else
                            midPointX = yeah + 64;
                        xspeed = (abs(midPointX - x))/45;
                        if (x &gt; midPointX)
                            xspeed = -xspeed;
                        yspeed = -abs((abs(ystart - y))/45);
                    }
                    if (y &lt;= ystart)
                    {
                        x = midPointX;
                        y = ystart;
                        xspeed = 0;
                        yspeed = 0;
                        dropTimer = 0;
                        flyTimer = 0;
                        phase = 0;
                    }
                }
                else
                {
                    image_index = 4;
                    calibrateDirection();
                }
                break;
            case 2: // shoot coins from hat
                if (son != noone &amp;&amp; instance_exists(son))
                {
                    if (son.fightTimer &lt; 60)
                        if mp_linear_step(son.x, view_yview + 112, 3, 0)
                            dropTimer++;
                    if (son.fightTimer &gt;= 100 &amp;&amp; son.fightTimer % 20 == 0 &amp;&amp; son.fightTimer &lt;= 160)
                    {
                        playSFX(sfxBolt);
                        b = instance_create(x, y - 32, objNewShotmanBullet);
                        b.contactDamage = 3;
                        b.stopAtSolid = 1;
                        b.grav = .2;
                        b.yspeed = -3;
                        b.xspeed = xSpeedAim(x, y - 32, tx, view_yview + 192,
                        -3, .2)
                        b.sprite_index = sprGoldManCoin;
                    }
                    if (son.fightTimer == 180)
                    {
                        if (son.x &gt; yeah)
                            midPointX = yeah + 64;
                        else
                            midPointX = yeah - 64;
                    }
                    if (son.fightTimer &gt;= 200)
                    {
                        if (mp_linear_step(midPointX, ystart,
                        3, 0))
                        {
                            x = midPointX;
                            y = ystart;
                            dropTimer = 0;
                            flyTimer = 0;
                            phase = 0;
                            angVal = 270;
                            dropsDone = choose(0, 1);
                            with (son) punches = other.dropsDone;
                        }
                    }
                }
                break;
            case 3: // he breaks down :(
                if (mp_linear_step(midPointX, ystart, 3, 0))
                    with (son)
                        dieTimer++;
                if (!instance_exists(objGoldem))
                {
                    dropTimer++
                    if (dropTimer &gt;= 45)
                    {
                        midPointY+= 32;
                        midPointX = x;
                        phase = 7;
                    }
                }
                break;
            case 4: // spin!
                if (flyTimer == 15)
                    dropsDone = choose(-1, 1);
                if (flyTimer &gt;= 30 &amp;&amp; flyTimer &lt; 150)
                {
                    angVal+= 3 * dropsDone;
                    x = midPointX + round(cos(degtorad(angVal)) * 96);
                    y = midPointY + round(sin(degtorad(angVal)) * 46);
                }
                if ((angVal - 315) % 45 == 0 &amp;&amp; angVal != 270 + (180 * dropsDone) 
                &amp;&amp; flyTimer &gt; 30 &amp;&amp; flyTimer &lt; 140)
                {
                    playSFX(sfxEnemyShoot);
                    instance_create(x, y + 24, objGoldManSpark);
                    instance_create(x, y + 24, objExplosion);
                }
                if (flyTimer &gt;= 180)
                {
                    image_index = 0;
                    if (instance_number(objGoldManSpark) &lt; 2)
                    {
                        lastPhase = 3;
                        phase = 7;
                    }
                }
                else
                    image_index = (flyTimer / 3) % 4;
                break;
            case 5: // bruh coins
                if (dropTimer &lt;= 45)
                {
                    if (mp_linear_step(yeah + (96 * dropsDone),
                    ystart, 3, 0))
                        dropTimer++;
                }
                else if (dropTimer &lt;= 115)
                {
                    image_xscale = dropsDone;
                    if (mp_linear_step(yeah + (96 * -dropsDone),
                    ystart, 3, 0))
                        dropTimer++;
                }
                else
                {
                    if (mp_linear_step(yeah, ystart, 3, 0))
                        if (instance_number(prtEnemyProjectile) &lt; 2)
                        {
                            lastPhase = 4;
                            phase = 7;
                        }
                }
                if (x &gt;= yeah - 48 &amp;&amp; x &lt;= yeah + 48)
                {
                    image_xscale = -1;
                    image_index = 0;
                }
                else
                {
                    image_index = 4;
                    if (x &lt; yeah - 48)
                        image_xscale = 1;
                    else
                        image_xscale = -1;
                }
                if (dropTimer == 35 || dropTimer == 105)
                {
                    playSFX(sfxCannonShoot);
                    s = instance_create(x, y + 24, objGoldManDrop);
                    s.grav = 0;
                    s.move = 1;
                    for (i = -1; i &lt; 2; i+=2)
                    {
                        l = instance_create(x, y + 24, objGoldManCoinSpread);
                        l.angle = point_direction(x, y + 24, 
                        yeah + (112 * i), y + 48);
                        l.sp = 4;
                        l.dir = i;
                    }
                }
                if (dropTimer == 15 || dropTimer == 85)
                    instance_create(x, y + 24, objExplosion);
                break;
            case 6: // 8 :)
                calibrateDirection();
                image_index = 4;
                if (flyTimer == 10)
                {
                    dropTimer = 270;
                    dropsDone = choose(-1, 1);
                }
                if (flyTimer &gt;= 15 &amp;&amp; flyTimer &lt; 255)
                {
                    angVal+= 1.5 * dropsDone;
                    dropTimer+= 3 * dropsDone;
                    x = midPointX + round(cos(degtorad(dropTimer)) * 96);
                    y = midPointY + round(sin(degtorad(angVal)) * 46);
                }
                if ((angVal - 315) % 90 == 0 &amp;&amp; angVal != 270 + (360 * dropsDone)
                &amp;&amp; flyTimer &gt; 15 &amp;&amp; flyTimer &lt; 240)
                {
                    playSFX(sfxBolt);
                    b = instance_create(x, y - 32, objNewShotmanBullet);
                    b.contactDamage = 3;
                    b.stopAtSolid = 1;
                    b.grav = .2;
                    b.yspeed = -4;
                    b.xspeed = xSpeedAim(x, y - 32, tx, ty,
                    -4, .2)
                    b.sprite_index = sprGoldManCoin;
                }
                if (flyTimer &gt;= 255)
                {
                    image_index = 0;
                    if (flyTimer &gt;= 275)
                    {
                        lastPhase = 5;
                        phase = 7;
                    }
                }
                break;
            case 7: //actual phase decision
                if (phaseLeft &lt; 0) 
                {
                    phaseLeft = 2;
                    phaseArrayDir = irandom(1);
                    phasePick = 3 + irandom(2);
                    if (phasePick == lastPhase)
                        phasePick++;
                }
                if (phaseArrayDir &gt; 0)
                    phase = phaseArray[phasePick - phaseLeft];
                else
                    phase = phaseArray[phasePick + phaseLeft];
                phaseLeft--;
                dropsDone = 0;
                dropTimer = 0;
                flyTimer = 0;
                angVal = 270;
                if (phase = 5)
                {
                    dropsDone = choose(-1, 1);
                    image_index = 4;
                    image_xscale = -dropsDone;
                }
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase = 3)
    other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (prtEnemyProjectile)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
for (i = -1; i &lt; 2; i+= 2)
{
    m = instance_create(x, y, objEnemyBullet);
    m.image_xscale = image_xscale;
    m.sprite_index = sprite_index;
    if (i &gt; 0)
        m.image_index = 6;
    else
        m.image_index = 5;
    m.yspeed = -3;
    m.xspeed = 2 * (i * image_xscale);
    m.grav = .2;
    m.contactDamage = 0;
    m.reflectable = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
