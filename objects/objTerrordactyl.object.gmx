<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTerrordactyl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 3;
grav = 0;

spd = 1.6;
curSpd = spd;
rawrTimer = 0;
rawr = 0;
extraAng = 3;

startXScale = image_xscale;
saveXScale = 0;
init = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    startXScale = image_xscale;
    init = false;
}

event_inherited();

if (entityCanStep())
{
    switch (rawr)
    {
        case 0: // schmoving
            if (curSpd &lt; spd)
                curSpd+= spd / 24;
            else
                curSpd = spd;
            if (checkSolid(40 * sign(xspeed), 0))
            {
                image_index = 1;
                rawr = 1;
            }
            break;
        case 1: // whoa back it up back it up
            if (curSpd &gt; 0)
                curSpd-= spd / 24;
            else
            {
                image_index = 2;
                image_xscale*= -1;
                saveXScale = image_xscale;
                curSpd = 0;
                rawr = 2;
            }
            break;
        case 2:
            calibrateDirection();
            rawrTimer++;
            if (rawrTimer == 16)
                image_index = 3;
            if (rawrTimer &gt;= 48 &amp;&amp; rawrTimer mod 4 == 0 &amp;&amp; rawrTimer &lt;= 72)
            {
                playSFX(sfxEnemyShoot);
                var tx = x, ty = y, ang = 180 * (image_xscale &lt; 0);
                if (instance_exists(target))
                {
                    tx = target.x;
                    ty = target.y;
                    ang = point_direction(x + (8 * image_xscale), y, tx, ty);
                }
                extraAng*= -1;
                m = instance_create(x + (8 * image_xscale), y, objEnemyBullet);
                m.dir = ang + extraAng;
                m.spd = 5;
            }
            if (rawrTimer == 96)
            {
                image_index = 0;
                image_xscale = saveXScale;
                rawrTimer = 0;
                rawr = 0;
            }
            break;
    }
    if (rawr &lt; 2)
        xspeed = curSpd * image_xscale;
}
else if (dead)
{
    curSpd = 0;
    rawr = 0;
    rawrTimer = 0;
    image_index = 0;
    image_xscale = startXScale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
