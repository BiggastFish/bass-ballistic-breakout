<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJumpShoot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 3;
stayDefeated = true;

canHit = 0;
canDamage = 0;
grav = 0;

jumpTimer = 0;
hasFired = false;
chillin = true;
dieToSpikes = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    var tx = x + 4 * image_xscale, ty = y;
    if (instance_exists(target))
    {
        tx = target.x;
        ty = target.y;
    }
    if (chillin)
    {
        calibrateDirection();
        if (instance_exists(target))
        {
            if (abs(tx - x) &lt;= 20)
            {
                playSFX(sfxShadowBlade);
                canHit = true;
                canDamage = true;
                grav = 0.25;
                yspeed = -6;
                xspeed = -1.4 * image_xscale;
                chillin = false;
                image_index = 1;
            }
        }
    }
    else
    {
        if (yspeed != 0)
        {
            image_index+= 0.25;
            if (image_index &lt; 1 || image_index &gt;= 3)
            {
                image_index = 1;
            }
            if (yspeed &gt;= 0 &amp;&amp; !ground &amp;&amp; !hasFired)
            {
                 playSFX(sfxMetalBlade);
                 f = instance_create(x, y, objEnemyBullet);
                 f.dir = point_direction(x, y + 4, tx, ty);
                 f.spd = 5;
                 f.depth = depth - 2;
                 f.image_speed = 1/3;
                 f.sprite_index = sprJumpShootBlade;
                 hasFired = true;
            }
        }
        if (ycoll &gt; 0)
        {
            xspeed = 0;
            jumpTimer = 0;
            hasFired = false;
            image_index = 3;
            playSFX(sfxLandClassic);
        }
        if (ground)
        {
            jumpTimer++
            calibrateDirection();
            if (jumpTimer &gt;= 45)
            {
                playSFX(sfxShadowBlade);
                yspeed = -6;
                xspeed = arcCalcXspeed(-6, 0.25, x, y, tx, ty)
                image_index = 1;
            }
        }
    }
}
else if (dead)
{
    chillin = true;
    canHit = false;
    canDamage = false;
    hasFired = false;
    jumpTimer = 0;
    grav = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
