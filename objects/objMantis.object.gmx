<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMantis</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 10;
healthpoints = healthpointsStart;
contactDamage = 3;
grav = 0;

swingTimer = 0;
chucked = 0;
resetAngle = -1;

swerve = false;
swingTimerMax = 112;
swingTimerStart = 60;
shootDir = 1;
cDistance = 40;
cAngle = 90;
addAngle = 4;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (resetAngle == -1)
{
    resetAngle = cAngle;
    swingTimer = swingTimerStart;
    if (swerve)
    {
        shootDir = 0;
        facePlayer = true;
    }
}

event_inherited();

if (entityCanStep())
{
    if (swerve)
    {
        x = xstart + cos(degtorad(cAngle)) * cDistance;
        cAngle += addAngle;
        cAngle = wrapAngle(cAngle);
    }

    swingTimer++;
    if (swingTimer == swingTimerMax - 8)
        image_index = 1;
    if (swingTimer == swingTimerMax)
    {
        var swingDir = shootDir, ang;
        if (swingDir != 0)
        {
            if (swingDir == 1)
                ang = 270 + (45 * image_xscale);
            else
                ang = 90 - (45 * image_xscale);
        }
        else
        {
            var ty = y;
            if (instance_exists(target))
                ty = target.y;
            if (ty &gt; bbox_top - 4)
                ang = 270 + (45 * image_xscale);
            else
                ang = 90 - (45 * image_xscale);
        }
        chain = instance_create(x + (18 * image_xscale), y - 4, objMantisBlade);
        chain.angle = ang;
        chain.dir = image_xscale;
        chain.depth = 1000005
        slash = instance_create(x + (18 * image_xscale), y - 4, objMantisBladeHurt);
        slash.parent = chain;
        slash.image_xscale = image_xscale;
        slash.depth = 1000006;
        chain.blade = slash;
        image_index = 2;
        chucked++;
        playSFX(sfxTripleBlade);
    }
    if (swingTimer == swingTimerMax + 8)
        image_index = 3;
    if (swingTimer == swingTimerMax + 16)
    {
        if (chucked &lt; 2)
        {
            swingTimer = swingTimerMax - 8;
            image_index = 1;
        }
        else
        {
            chucked = 0;
            image_index = 0;
            swingTimer = 0;
        }
    }
}
else if (dead)
{
    chucked = 0;
    swingTimer = 0;
    image_index = 0;
    cAngle = resetAngle;
    swingTimer = swingTimerStart;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
