<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPerfuma</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 140;
healthpoints = healthpointsStart;
blockCollision = 0;
grav = 0;
contactDamage = 4;

vine = noone;
facePlayerOnSpawn = 1;
vineTimer = 0;
spd = 0;
scrollSpeed = 0;
phase = irandom(2);
introType = 0;
dropsDone = 0;
stationaryPhaseLeft = 1;
movingPhaseLeft = 2;
phaseArray[0] = 1;
phaseArray[1] = 2;
phaseArray[2] = 0;
phaseArray[3] = 1;
phaseArray[4] = 2;
phaseArray[5] = 0;
phaseArray[6] = 1;
phaseArrayDir = 1;
phasePick = 2 + irandom(2);
lastStationaryPhase = choose(3, 4);

phasesDidMoving = 0;
phaseEndMoving = false;
phaseDoneMoving[0] = false;
phaseDoneMoving[1] = false;
phaseDoneMoving[2] = false;
phasesDidMoving = 0;
lastPhase = 0;
phaseEndStationary = false;
phaseDoneStationary[0] = false;
phaseDoneStationary[1] = false;
phasesDidStationary = 0;
tx = x;
ty = y;

// Music
music = "HoTDBoss.ogg";
musicType = "OGG";
musicTrackNumber = 0;
musicVolume = 0.8;
musicLoop = true;
musicLoopSecondsStart = 6.665;
musicLoopSecondsEnd = 70.655;

// Damage Tables
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objYamato, 2);
enemyDamageValue(objKnuckleSandwich, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Handle Intro
if (!global.frozen)
{
    // Starting the intro animation
    if (startIntro)
    {
        startIntro = false;
        isIntro = true;
        drawBoss = true;
    }
    else if (isIntro)
    {
        visible = 1;
        y-= 54;
        vine = instance_create(x, bbox_bottom, objPerfumaVine);
        vine.image_xscale = image_xscale;
        vine.parent = id;
        isIntro = false;
    }
}
if (entityCanStep())
{
    if (isFight)
    {
        if (phase &lt; 3)
        {
            if (abs(scrollSpeed) &lt; 1.6)
            {
                scrollSpeed+= (1.6/60) * -image_xscale;
            }
        }
        if (instance_exists(target))
        {
            tx = target.x;
            ty = target.y;
        }
        with (objParallax)
        {
            if (myBG == bgPerfumaGround)
                xspeed = other.scrollSpeed;
            if (myBG == bgPerfumaFrontTrees)
                xspeed = other.scrollSpeed/1.5;
            if (myBG == bgPerfumaGrass)
                xspeed = other.scrollSpeed/2;
            if (myBG == bgPerfumaBackTrees)
                xspeed = other.scrollSpeed/2.5;
        }
        with (objMegaman)
        {
            if (dashJumped || isSlide)
                shiftObject(other.scrollSpeed/1.4, 0, 0);
            else
                shiftObject(other.scrollSpeed, 0, 0);
        }
        with (objHarmfulExplosion)
            shiftObject(other.scrollSpeed, 0, 0);
        with (objTrebleBoost)
            shiftObject(other.scrollSpeed, 0, 0);
        switch (phase)
        {
            case 0: // vine boom sound effect
                if (vineTimer == 20 || vineTimer == 100 || vineTimer == 180)
                {
                    image_index = 10;
                }
                if (vineTimer == 30 || vineTimer == 110 || vineTimer == 190)
                {
                    image_index = 9;
                }
                if (vineTimer == 70 || vineTimer == 150 || vineTimer == 230)
                {
                    image_index = 1;
                }
                if (vineTimer == 80 || vineTimer == 160 || vineTimer == 240)
                {
                    image_index = 2;
                    playSFX(sfxTripleBlade);
                    l = instance_create(x + (48 * image_xscale), view_yview + 208,
                    objPerfumaThorn);
                    l.image_xscale = image_xscale;
                }
                if (vineTimer == 260)
                {
                    image_index = 0;
                }
                if (vineTimer &gt;= 260 &amp;&amp; !instance_exists(objPerfumaThorn))
                {
                    phaseEndMoving = true;
                }
                break;
            case 1: //quad bomb
                if (vineTimer == 30 || vineTimer == 80 || vineTimer == 130 || vineTimer == 150)
                    image_index = 1;
                if (vineTimer == 40 || vineTimer == 90 || vineTimer == 140 || vineTimer == 160)
                {
                    if (vineTimer == 40 || vineTimer == 140)
                        image_index = 3;
                    else
                        image_index = 4;
                    playSFX(sfxCannonShoot);
                    s = instance_create(x + (12 * image_xscale), y - 4, objPerfumaSeedBomb);
                    s.grav = .2;
                    s.yspeed = -4;
                    s.xspeed = xSpeedAim(x + (12 * image_xscale), y - 4, tx, ty, -4, .2);
                }
                if (vineTimer == 180)
                {
                    image_index = 0;
                }
                if (vineTimer == 200)
                {
                    phaseEndMoving = true;
                }
                break;
            case 2: //r/whoosh i did this joke like 3 times already
                if (vineTimer == 15)
                {
                    image_index = 4;
                }
                if (vineTimer == 60)
                {
                    image_index = 7;
                    playSFX(sfxWaterShield2);
                    for (k = 0; k &lt;= 2; k++)
                    {
                        j = instance_create(x + (12 * image_xscale), y + 10, objEnemyBullet);
                        j.grav = -.2;
                        j.yspeed = 6;
                        j.xspeed = xSpeedAim(x + (12 * image_xscale), y + 10, 
                        x + ((16 + (64 * k)) * image_xscale), view_yview, 3, -.2);
                        j.sprite_index = sprPerfumaSpike;
                    }
                }
                if (vineTimer == 230)
                {
                    image_index = 0;
                }
                if (vineTimer &gt;= 60)
                {
                    with (objEnemyBullet)
                    {
                        if (y &lt;= view_yview + 48)
                        {
                            if (grav != 0)
                            {
                                grav = 0;
                                xspeed = 0;
                                yspeed = 0;
                                other.image_index = 4; 
                                other.vineTimer = 180;
                            }
                            if (other.vineTimer == 210)
                            {
                                other.image_index = 7;
                                if (instance_exists(target))
                                {
                                    aimAtTarget(3);
                                }
                                else
                                {
                                    yspeed = -3;
                                }
                            }
                        }
                    }
                    if (vineTimer &gt;= 250)
                    {
                        phaseEndMoving = true;
                    }
                }
                break;
            case 3: // double whammy
                if (vineTimer &lt; 15)
                {
                    image_index = 0;
                }
                if (vineTimer == 15)
                {
                    image_index = 8;
                }
                if (vineTimer == 55 || vineTimer == 110)
                {
                    image_index = 1;
                }
                if (vineTimer == 65 || vineTimer == 120)
                {
                    playSFX(sfxCannonShoot);
                    if (vineTimer == 65)
                    {
                        image_index = 3;
                        for (p = 0; p &lt;= 2; p++)
                        {
                            s = instance_create(x + (12 * image_xscale), y - 4, objPerfumaSeedBomb);
                            s.grav = .2;
                            s.yspeed = -5;
                            s.xspeed = xSpeedAim(x + (12 * image_xscale), y - 4, 
                            x + ((32 + (64 * p)) * image_xscale), view_yview + 208, -4, .2);
                        }
                    }
                    else
                    {
                        image_index = 4;
                        for (p = 0; p &lt;= 3; p++)
                        {
                            s = instance_create(x + (12 * image_xscale), y - 4, objPerfumaSeedBomb);
                            s.grav = .2;
                            s.yspeed = -5;
                            s.xspeed = xSpeedAim(x + (12 * image_xscale), y - 4, 
                            x + ((8 + (56 * p)) * image_xscale), view_yview + 208, -4, .2);
                        }
                    }
                    
                }
                if (vineTimer == 180)
                    image_index = 0;
                if (vineTimer == 205)
                {
                    phaseEndStationary = true;
                }
                break;
            case 4: // stream
                if (vineTimer &lt; 15)
                {
                    image_index = 0;
                }
                if (vineTimer == 15 || vineTimer == 95)
                {
                    image_index = 7;
                }
                if (vineTimer % 5 == 0 &amp;&amp; ((vineTimer &gt;= 45 &amp;&amp; vineTimer &lt;= 80) || 
                vineTimer &gt;= 125 &amp;&amp; vineTimer &lt;= 160))
                {
                    image_index = 3;
                    playSFX(sfxEnemyShoot);
                    l = instance_create(x + (12 * image_xscale), y - 4, objEnemyBullet);
                    l.grav = .25;
                    l.yspeed = -4;
                    l.xspeed = xSpeedAim(x + (12 * image_xscale), y - 4, tx, ty, -4, .25);
                    l.sprite_index = sprPerfumaSpike;
                    l.image_index = 1;
                }
                if (vineTimer == 180)
                    image_index = 0;
                if (vineTimer &gt;= 180 &amp;&amp; !instance_exists(objEnemyBullet))
                {
                    phaseEndStationary = true;
                }
                break;
            case 5: // phase 3 and 4 decision
                if (abs(scrollSpeed) &gt; 0.1)
                {
                    image_index = 5;
                    scrollSpeed-= (1.6/60) * -image_xscale;
                }
                else
                {
                    scrollSpeed = 0;
                    if ((x &lt; view_xview + 48 &amp;&amp; image_xscale &gt; 0 ||
                    x &gt; view_xview + 208 &amp;&amp; image_xscale &lt; 0) &amp;&amp; vineTimer &lt; 15)
                    {
                        x+= 2 * image_xscale;
                    }
                    else
                    {
                        vineTimer++;
                    }
                }
                if (vineTimer &gt;= 15)
                {
                    if (phasesDidStationary &lt; 3)
                    {
                        if (phasesDidStationary == 1)
                        {
                            if (vineTimer == 15)
                            {
                                image_index = 5;
                                spd = -2;
                            }
                            if (y &lt; view_yview + 172)
                            {
                                y++;
                            }
                            if (spd &lt; 4)
                            {
                                spd+= 8/60;
                            }
                            if ((xspeed &gt; 0 &amp;&amp; image_xscale &lt; 0) || (xspeed &lt; 0 &amp;&amp; image_xscale &gt; 0))
                            {
                                image_index = 5;
                            }
                            else
                            {
                                image_index = 6;
                            }
                            xspeed = spd * image_xscale;
                            if (bbox_right &lt;= view_xview - 32 &amp;&amp; image_xscale &lt; 0 
                            || bbox_left &gt;= view_xview + view_wview + 32 &amp;&amp; image_xscale &gt; 0)
                            {
                                spd = 0;
                                xspeed = 0;
                                vineTimer = 0;
                                x = view_xview + 128 + (176 * image_xscale);
                                image_xscale *= -1;
                                image_index = 0;
                                y-= 34;
                                phasesDidStationary++;
                            }
                        }
                        else
                        {
                            var choosePhase;
                            do {choosePhase = irandom(1)}
                            until (phaseDoneStationary[choosePhase] == false)

                            vineTimer = 0;
                            phase = choosePhase + 3;
                        }
                    }
                    else
                    {
                        phaseEndStationary = true;
                    }
                }
                break;
        }

        if ((phase &lt; 3 &amp;&amp; (abs(scrollSpeed) &gt;= 1.4)) ||
        (phase &gt;= 3 &amp;&amp; phase &lt; 5 &amp;&amp; scrollSpeed == 0))
        {
            vineTimer++;
        }
        if (phaseEndMoving)
        {
            lastPhase = phase;
            phaseDoneMoving[phase] = true;
            phasesDidMoving++;
            if (phasesDidMoving &gt;= 3)
            {
                phasesDidMoving = 0;
                for (l = 0; l &lt; 3; l++)
                {
                    phaseDoneMoving[l] = false;
                }
            }

            vineTimer = 0;
            if (phasesDidMoving == 0)
            {
                phase = 5;
            }
            else
            {
                var choosePhase;
                do {choosePhase = irandom(2)}
                until (phaseDoneMoving[choosePhase] == false
                &amp;&amp; choosePhase != lastPhase)

                phase = choosePhase;
            }
            phaseEndMoving = false;
        }
        if (phaseEndStationary)
        {
            if (phasesDidStationary &lt; 3)
            {
                phaseDoneStationary[phase - 3] = true;
                phasesDidStationary++;
                phase = 5;
            }
            else
            {
                phaseDoneStationary[0] = false;
                phaseDoneStationary[1] = false;
                phasesDidStationary = 0;
                phase = irandom(2);
            }
            vineTimer = 0;
            phaseEndStationary = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with (objPerfumaVine)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
with (prtEnemyProjectile)
{
    instance_create(x, y, objExplosion);
    instance_destroy();
}
with (objParallax)
    xspeed = 0;
m = instance_create(x, y, objEnemyBullet);
m.image_xscale = image_xscale;
m.sprite_index = sprite_index;
m.yspeed = -3;
m.xspeed = 2 * image_xscale + ((-3 * (abs(scrollSpeed) &lt; 1.4)) * image_xscale);
m.grav = .2;
m.contactDamage = 0;
m.reflectable = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
