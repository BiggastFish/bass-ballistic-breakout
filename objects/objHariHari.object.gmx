<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHariHari</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 256;
healthpoints = healthpointsStart;
contactDamage = 4;
undamageable = true;

init = true;
initXScale = image_xscale;
phase = 0;
timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    grav = 0.25 * image_yscale;
    initXScale = image_xscale;
    init = false;
}

event_inherited();

if (entityCanStep())
{
    if (phase == 0)
    {
        if (!ground)
            xspeed = 0;
        else if (xspeed == 0)
            xspeed = 2 * image_xscale;
        else if (checkFall(30 * image_xscale))
        {
            xspeed *= -1;
            image_xscale *= -1;
        }
        xSpeedTurnaround();
    }
    else if (phase == 1)
    {
        timer++;
        if (timer == 8) image_index = 2;
        if (timer &gt;= 90)
        {
            image_index = 0;
            phase = 0;
            timer = 0;
        }
    }

}
else if (dead)
{
    image_index = 0;
    image_xscale = initXScale;
    phase = 0;
    timer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (phase == 0)
{
    xspeed = 0;
    phase = 1;
    image_index = 1;
    for (l = 0; l &lt; 5; l++)
    {
        a = instance_create(x, y - (15 * image_yscale), objEnemyBullet);
        a.sprite_index = sprHariHariNeedles;
        a.contactDamage = 3;
        a.image_index = l;
        a.image_xscale = image_yscale;
        a.image_yscale = image_yscale;
        a.dir = (180 * (image_yscale &gt; 0)) - (45 * l);
        a.spd = 4;
    }
}
else
{
    timer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
