<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLaserBeak</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 3;

category = "floating";

canDamage = false;
canHit = false;
blockCollision = 0;
grav = 0;

phase = 0;
timer = 0;

enemyDamageValue(objKnuckleSandwich, 4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    var tx = x, ty = y;
    if (instance_exists(target))
    {
        tx = target.x;
        ty = target.y;
    }
    if (phase == 0) // hiding in da bushes
    {
        if (instance_exists(target) &amp;&amp; (abs(tx - x) &lt;= 56))
        {
            canHit = true;
            canDamage = true;
            phase = 1;
            yspeed = -6;
            visible = true;
            playSFX(sfxHeliButonReveal);
            playSFX(sfxJetEggLaunch);
            for (i = 0; i &lt; 8; i++)
                instance_create(x, y, objHeliButonLeaf);
        }
    }
    else if (phase == 1) // soar up and wait
    {
        if (y &lt;= view_yview + 48)
        {
            yspeed = 0;
            image_index = 1;
        }
        if (yspeed == 0)
        {
            timer++;
            if (timer == 4)
                image_index = 2;
            if (timer &gt;= 8)
            {
                timer = 0;
                phase = 2;
            }
        }
    }
    else if (phase == 2) // chasin'
    {
        timer++;
        image_index = 2 + ((timer / 2) mod 2);
        mp_linear_step(tx, ty, 1, false);
    }
    else if (phase == 3) // OH NO, CRASH LANDING
    {
        timer++;
        image_index = 4 + ((timer / 6) mod 4);
        if (checkSolid(0, 0))
            event_user(EV_DEATH);
    }
}
else if (dead)
{
    phase = 0;
    timer = 0;
    grav = 0;
    image_index = 0;
    visible = false;
    canHit = false;
    canDamage = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase &lt; 3)
{
    if (iceTimer &gt; 0)
    {
        iceTimer = 1;
        entityHandleIced();
    }
    playSFX(sfxEnemyDrop2);
    phase = 3;
    yspeed = -2;
    grav = 0.25;
    timer = 0;
    image_index = 4;
    canHit = false;
    
}
else
{
    event_inherited();
    stopSFX(sfxEnemyDrop2);
    playSFX(sfxExplosion2);
    instance_create(x, y, objHarmfulExplosion);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
