<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSeedBomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

contactDamage = 3;
blockCollision = 1;
grav = 0.25;
rotTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    rotTimer++;
    if (rotTimer mod 3 == 0)
        image_angle+= 90 * image_xscale;
    if (ycoll != 0 || xcoll != 0)
    {
        playSFX(sfxBalladeCrackerExplosion);
        r = instance_create(x, y, objHarmfulExplosion);
        for (l = 0; l &lt;= 1; l++)
        {
            r.primCol[l] = make_color_rgb(248, 184, 0);
            r.secCol[l] = make_color_rgb(252, 224, 168);
        }
        for (d = 2; d &lt;= 3; d++)
        {
            r.primCol[d] = make_color_rgb(252, 160, 68);
            r.secCol[d] = make_color_rgb(240, 208, 176);
        }
        for (f = 4; f &lt;= 5; f++)
        {
            r.primCol[f] = make_color_rgb(248, 88, 152);
            r.secCol[f] = make_color_rgb(216, 184, 248);
        }
        for (s = 6; s &lt;= 7; s++)
        {
            r.primCol[s] = make_color_rgb(216, 0, 204);
            r.secCol[s] = make_color_rgb(248, 120, 248);
        }
        for (g = 8; g &lt;= 9; g++)
        {
            r.primCol[g] = make_color_rgb(152, 120, 248);
            r.secCol[g] = make_color_rgb(184, 184, 248);
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
