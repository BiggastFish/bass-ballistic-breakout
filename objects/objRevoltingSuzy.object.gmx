<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRevoltingSuzy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 4;

grav = 0;

// Enemy specific code
init = 1;
spd = 0;
bulletDir1 = 0;
bulletDir2 = 0;
bulletDir3 = 0;

dir = "h";
startDir = 1;

beginStartDir = startDir;

moveTimer = 0;
moving = false;
firsttime = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (init)
{
    init = 0;
    beginStartDir = startDir;
}

event_inherited();

if (entityCanStep())
{
    if (dir == "h")
    {
        xspeed = spd;
        if (startDir == 1)
        {
            bulletDir1 = 90;
            bulletDir2 = 180;
            bulletDir3 = 270;
        }
        else
        {
            bulletDir1 = 90;
            bulletDir2 = 360;
            bulletDir3 = 270;
        }
    }
    else
    {
        yspeed = spd;
        if (startDir = 1)
        {
            bulletDir1 = 90;
            bulletDir2 = 180;
            bulletDir3 = 360;
        }
        else
        {
            bulletDir1 = 360;
            bulletDir2 = 180;
            bulletDir3 = 270;
        }
    }
    if (moving)
        spd = startDir * 3;

    if (!moving)
    {
        moveTimer += 1;
        if (moveTimer == 8)
        {
            if (image_index &gt; 2)
            {
                image_index = 2; // Straighten after bouncing
            }
        }
        if (moveTimer == 14)
        {
            if (image_index &gt; 1)
            {
                image_index = 1;
            }
        }
        if (moveTimer == 20)
        {
            if (image_index &gt; 0)
            {
                image_index = 0;
                moveTimer = 0;
            }
        }
        if (moveTimer == 110)
        {
            image_index = 1; // eye half-open
        }
        else if (moveTimer &gt;= 120)
        {
            image_index = 2;
            moving = true;
            if (firsttime)
            {
                if (dir == "h")
                {
                    if (checkSolid(-4, 0, 1, 1))
                    {
                        startDir = 1;
                    }
                    else if (checkSolid(4, 0, 1, 1))
                    {
                        startDir = -1;
                    }
                }
                else
                {
                    if (checkSolid(0, -4, 1, 1))
                    {
                        startDir = 1;
                    }
                    else if (checkSolid(0, 4, 1, 1))
                    {
                        startDir = -1;
                    }
                }
            }
            firsttime = 0;
        }
    }
    else
    {
        if (xcoll!= 0 || ycoll!= 0)
        {
            spd = 0;
            moving = 0;
            moveTimer = 0;
            image_index = 2 + (xcoll &lt; 0) + ((xcoll &gt; 0) * 2) 
            + ((ycoll &gt; 0) * 3) + ((ycoll &lt; 0) * 4);
            startDir = -startDir;
            playSFX(sfxEnemyShoot);
            for (var i = 0; i &lt; 3; i ++)
            {
                n = instance_create(x + 8, y + 8, objEnemyBullet);
                n.spd = 3;
                if (i == 0)
                    n.dir = bulletDir1;
                if (i == 1)
                    n.dir = bulletDir2;
                if (i == 2)
                    n.dir = bulletDir3;
                n.depth = depth + 1;
            }
        }
    }
}
else if (dead)
{
    spd = 0;
    moveTimer = 0;
    startDir = beginStartDir;
    moving = false;
    image_index = 0;
    firsttime = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
