<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprZapCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 4;

grav = 0;

// Enemy specific code
shocko = false;
shockoTimer = 0;
maxShockoTimer = 128;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    if (shocko)
    {
        if (image_index == 0)
        {
            if (instance_exists(target) &amp;&amp; abs(target.y - y) &lt;= 12)
            {
                image_index = 1;
                playSFX(sfxElecnShoot);
                playSFX(sfxSplash);
                b = instance_create(x + (4 * image_xscale), y, objZapCannonShot);
                b.depth = depth - 1;
                b.xDir = image_xscale;
            }
        }
        else
        {
            shockoTimer++;
            if (shockoTimer &gt;= 8)
            {
                image_index = 2;
                shockoTimer = 0;
                shocko = false;
            }
        }
    }
    else
    {
        shockoTimer++;
        if (shockoTimer &gt;= maxShockoTimer)
        {
            if (image_index != 0)
            {
                shockoTimer-= 6;
                image_index++;
            }
            else
            {
                shockoTimer = 0;
                shocko = true;
            }
        }
    }
}
else if (dead)
{
    image_index = 0;
    shockoTimer = 0;
    shocko = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
